["^ ","~:output",["^ ","~:js","goog.provide('posh.reagent');\ngoog.require('cljs.core');\ngoog.require('posh.core');\ngoog.require('posh.stateful');\ngoog.require('posh.lib.db');\ngoog.require('posh.lib.update');\ngoog.require('datascript.core');\ngoog.require('reagent.core');\ngoog.require('reagent.ratom');\nposh.reagent.missing_pull_result = (function posh$reagent$missing_pull_result(pull_expr){\nif(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),null], null), null),pull_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),null], null);\n} else {\nreturn null;\n}\n});\nposh.reagent.safe_pull = (function posh$reagent$safe_pull(db,query,id){\nif(cljs.core.integer_QMARK_(id)){\nreturn (datascript.core.pull.cljs$core$IFn$_invoke$arity$3 ? datascript.core.pull.cljs$core$IFn$_invoke$arity$3(db,query,id) : datascript.core.pull.call(null,db,query,id));\n} else {\nif(cljs.core.vector_QMARK_(id)){\nvar temp__5733__auto__ = (datascript.core.entid.cljs$core$IFn$_invoke$arity$2 ? datascript.core.entid.cljs$core$IFn$_invoke$arity$2(db,id) : datascript.core.entid.call(null,db,id));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar eid = temp__5733__auto__;\nreturn (datascript.core.pull.cljs$core$IFn$_invoke$arity$3 ? datascript.core.pull.cljs$core$IFn$_invoke$arity$3(db,query,eid) : datascript.core.pull.call(null,db,query,eid));\n} else {\nreturn posh.reagent.missing_pull_result(query);\n}\n} else {\nif((id == null)){\nreturn posh.reagent.missing_pull_result(query);\n} else {\nreturn null;\n}\n}\n}\n});\nposh.reagent.dcfg = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),datascript.core.db,new cljs.core.Keyword(null,\"pull\",\"pull\",-860544805),posh.reagent.safe_pull,new cljs.core.Keyword(null,\"q\",\"q\",689001697),datascript.core.q,new cljs.core.Keyword(null,\"filter\",\"filter\",-948537934),datascript.core.filter,new cljs.core.Keyword(null,\"with\",\"with\",-1536296876),datascript.core.with$,new cljs.core.Keyword(null,\"entid\",\"entid\",1720688982),datascript.core.entid,new cljs.core.Keyword(null,\"transact!\",\"transact!\",-822725810),datascript.core.transact_BANG_], null);\nposh.reagent.set_conn_listener_BANG_ = (function posh$reagent$set_conn_listener_BANG_(posh_atom,conn,db_id){\nvar posh_vars = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"posh-atom\",\"posh-atom\",-510480810),posh_atom,new cljs.core.Keyword(null,\"db-id\",\"db-id\",747248515),db_id], null);\ndatascript.core.listen_BANG_.cljs$core$IFn$_invoke$arity$3(conn,new cljs.core.Keyword(null,\"posh-dispenser\",\"posh-dispenser\",-482466766),((function (posh_vars){\nreturn (function (var$){\nif((var$ instanceof cljs.core.Keyword)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(posh_vars,var$);\n} else {\nreturn null;\n}\n});})(posh_vars))\n);\n\ncljs.core.add_watch(conn,new cljs.core.Keyword(null,\"posh-schema-listener\",\"posh-schema-listener\",-158129486),((function (posh_vars){\nreturn (function (_,___$1,old_state,new_state){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(old_state),new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(new_state))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(posh_atom,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),db_id], null),new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(new_state));\n} else {\nreturn null;\n}\n});})(posh_vars))\n);\n\ndatascript.core.listen_BANG_.cljs$core$IFn$_invoke$arity$3(conn,new cljs.core.Keyword(null,\"posh-listener\",\"posh-listener\",-6636061),((function (posh_vars){\nreturn (function (tx_report){\nvar map__46940 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(posh_atom,posh.core.after_transact,cljs.core.PersistentArrayMap.createAsIfByAssoc([conn,tx_report]));\nvar map__46940__$1 = (((((!((map__46940 == null))))?(((((map__46940.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46940.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46940):map__46940);\nvar ratoms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46940__$1,new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364));\nvar changed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46940__$1,new cljs.core.Keyword(null,\"changed\",\"changed\",570724917));\nvar seq__46942 = cljs.core.seq(changed);\nvar chunk__46943 = null;\nvar count__46944 = (0);\nvar i__46945 = (0);\nwhile(true){\nif((i__46945 < count__46944)){\nvar vec__46952 = chunk__46943.cljs$core$IIndexed$_nth$arity$2(null,i__46945);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46952,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46952,(1),null);\ncljs.core.reset_BANG_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(ratoms,k),new cljs.core.Keyword(null,\"results\",\"results\",-1134170113).cljs$core$IFn$_invoke$arity$1(v));\n\n\nvar G__46985 = seq__46942;\nvar G__46986 = chunk__46943;\nvar G__46987 = count__46944;\nvar G__46988 = (i__46945 + (1));\nseq__46942 = G__46985;\nchunk__46943 = G__46986;\ncount__46944 = G__46987;\ni__46945 = G__46988;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__46942);\nif(temp__5735__auto__){\nvar seq__46942__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46942__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__46942__$1);\nvar G__46989 = cljs.core.chunk_rest(seq__46942__$1);\nvar G__46990 = c__4550__auto__;\nvar G__46991 = cljs.core.count(c__4550__auto__);\nvar G__46992 = (0);\nseq__46942 = G__46989;\nchunk__46943 = G__46990;\ncount__46944 = G__46991;\ni__46945 = G__46992;\ncontinue;\n} else {\nvar vec__46955 = cljs.core.first(seq__46942__$1);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46955,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46955,(1),null);\ncljs.core.reset_BANG_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(ratoms,k),new cljs.core.Keyword(null,\"results\",\"results\",-1134170113).cljs$core$IFn$_invoke$arity$1(v));\n\n\nvar G__46993 = cljs.core.next(seq__46942__$1);\nvar G__46994 = null;\nvar G__46995 = (0);\nvar G__46996 = (0);\nseq__46942 = G__46993;\nchunk__46943 = G__46994;\ncount__46944 = G__46995;\ni__46945 = G__46996;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});})(posh_vars))\n);\n\nreturn conn;\n});\nposh.reagent.posh_BANG_ = (function posh$reagent$posh_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46997 = arguments.length;\nvar i__4731__auto___46998 = (0);\nwhile(true){\nif((i__4731__auto___46998 < len__4730__auto___46997)){\nargs__4736__auto__.push((arguments[i__4731__auto___46998]));\n\nvar G__46999 = (i__4731__auto___46998 + (1));\ni__4731__auto___46998 = G__46999;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn posh.reagent.posh_BANG_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\nposh.reagent.posh_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (conns){\nvar posh_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nreturn cljs.core.reset_BANG_(posh_atom,(function (){var n = (0);\nvar conns__$1 = conns;\nvar posh_tree = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(posh.core.empty_tree(posh.reagent.dcfg,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"results\",\"results\",-1134170113)], null)),new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364),cljs.core.PersistentArrayMap.EMPTY,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654),cljs.core.PersistentArrayMap.EMPTY], 0));\nwhile(true){\nif(cljs.core.empty_QMARK_(conns__$1)){\nreturn posh_tree;\n} else {\nvar G__47004 = (n + (1));\nvar G__47005 = cljs.core.rest(conns__$1);\nvar G__47006 = (function (){var db_id = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([\"conn\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(''));\nreturn posh.core.add_db.cljs$core$IFn$_invoke$arity$4(posh_tree,db_id,posh.reagent.set_conn_listener_BANG_(posh_atom,cljs.core.first(conns__$1),db_id),new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.first(conns__$1))));\n})();\nn = G__47004;\nconns__$1 = G__47005;\nposh_tree = G__47006;\ncontinue;\n}\nbreak;\n}\n})());\n});\n\nposh.reagent.posh_BANG_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nposh.reagent.posh_BANG_.cljs$lang$applyTo = (function (seq46958){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq46958));\n});\n\nposh.reagent.get_conn_var = (function posh$reagent$get_conn_var(conn,var$){\nvar fexpr__46959 = new cljs.core.Keyword(null,\"posh-dispenser\",\"posh-dispenser\",-482466766).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(null,\"listeners\",\"listeners\",394544445).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(conn))));\nreturn (fexpr__46959.cljs$core$IFn$_invoke$arity$1 ? fexpr__46959.cljs$core$IFn$_invoke$arity$1(var$) : fexpr__46959.call(null,var$));\n});\nposh.reagent.get_posh_atom = (function posh$reagent$get_posh_atom(poshdb_or_conn){\nif(datascript.core.conn_QMARK_(poshdb_or_conn)){\nreturn posh.reagent.get_conn_var(poshdb_or_conn,new cljs.core.Keyword(null,\"posh-atom\",\"posh-atom\",-510480810));\n} else {\nreturn posh.stateful.get_posh_atom(poshdb_or_conn);\n}\n});\nposh.reagent.get_db = (function posh$reagent$get_db(poshdb_or_conn){\nif(datascript.core.conn_QMARK_(poshdb_or_conn)){\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db\",\"db\",993250759),posh.reagent.get_conn_var(poshdb_or_conn,new cljs.core.Keyword(null,\"db-id\",\"db-id\",747248515))], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"posh\",\"posh\",-1205664462),posh.reagent.get_conn_var(poshdb_or_conn,new cljs.core.Keyword(null,\"posh-atom\",\"posh-atom\",-510480810))], null));\n} else {\nreturn poshdb_or_conn;\n}\n});\nposh.reagent.rm_posh_item = (function posh$reagent$rm_posh_item(posh_atom,storage_key){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(posh_atom,(function (posh_atom_val){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(posh.core.remove_item(posh_atom_val,storage_key),new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364).cljs$core$IFn$_invoke$arity$1(posh_atom_val),storage_key),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654).cljs$core$IFn$_invoke$arity$1(posh_atom_val),storage_key)], 0));\n}));\n});\nposh.reagent.make_query_reaction = (function posh$reagent$make_query_reaction(var_args){\nvar G__46961 = arguments.length;\nswitch (G__46961) {\ncase 4:\nreturn posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nposh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4 = (function (posh_atom,storage_key,add_query_fn,options){\nvar temp__5733__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(posh_atom),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654),storage_key], null));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar r = temp__5733__auto__;\nreturn r;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(posh_atom,((function (temp__5733__auto__){\nreturn (function (posh_atom_val){\nvar posh_atom_with_query = (add_query_fn.cljs$core$IFn$_invoke$arity$1 ? add_query_fn.cljs$core$IFn$_invoke$arity$1(posh_atom_val) : add_query_fn.call(null,posh_atom_val));\nvar query_result = new cljs.core.Keyword(null,\"results\",\"results\",-1134170113).cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cache\",\"cache\",-1237023054).cljs$core$IFn$_invoke$arity$1(posh_atom_with_query),storage_key));\nvar query_ratom = (function (){var or__4131__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364).cljs$core$IFn$_invoke$arity$1(posh_atom_with_query),storage_key);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$1(query_result);\n}\n})();\nvar query_reaction = reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic(((function (posh_atom_with_query,query_result,query_ratom,temp__5733__auto__){\nreturn (function (){\nreturn cljs.core.deref(query_ratom);\n});})(posh_atom_with_query,query_result,query_ratom,temp__5733__auto__))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),((function (posh_atom_with_query,query_result,query_ratom,temp__5733__auto__){\nreturn (function (_,___$1){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cache\",\"cache\",-1237023054).cljs$core$IFn$_invoke$arity$1(options),new cljs.core.Keyword(null,\"forever\",\"forever\",2103455015))){\nreturn null;\n} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(posh_atom,((function (posh_atom_with_query,query_result,query_ratom,temp__5733__auto__){\nreturn (function (posh_atom_val__$1){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(posh.core.remove_item(posh_atom_val__$1,storage_key),new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364).cljs$core$IFn$_invoke$arity$1(posh_atom_val__$1),storage_key),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654).cljs$core$IFn$_invoke$arity$1(posh_atom_val__$1),storage_key)], 0));\n});})(posh_atom_with_query,query_result,query_ratom,temp__5733__auto__))\n);\n}\n});})(posh_atom_with_query,query_result,query_ratom,temp__5733__auto__))\n], 0));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(posh_atom_with_query,new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ratoms\",\"ratoms\",1900437364).cljs$core$IFn$_invoke$arity$1(posh_atom_with_query),storage_key,query_ratom),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"reactions\",\"reactions\",2029850654).cljs$core$IFn$_invoke$arity$1(posh_atom_with_query),storage_key,query_reaction)], 0));\n});})(temp__5733__auto__))\n)),storage_key);\n}\n});\n\nposh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$3 = (function (posh_atom,storage_key,add_query_fn){\nreturn posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4(posh_atom,storage_key,add_query_fn,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nposh.reagent.make_query_reaction.cljs$lang$maxFixedArity = 4;\n\n/**\n * Returns a reaction of a pull expression. The options argument may specify `:cache :forever`, which keeps query results\n *   cached indefinitely, even if the reaction is disposed.\n */\nposh.reagent.pull = (function posh$reagent$pull(var_args){\nvar G__46964 = arguments.length;\nswitch (G__46964) {\ncase 4:\nreturn posh.reagent.pull.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn posh.reagent.pull.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nposh.reagent.pull.cljs$core$IFn$_invoke$arity$4 = (function (poshdb,pull_pattern,eid,options){\nvar true_poshdb = posh.reagent.get_db(poshdb);\nvar storage_key = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"pull\",\"pull\",-860544805),true_poshdb,pull_pattern,eid], null);\nvar posh_atom = posh.reagent.get_posh_atom(poshdb);\nreturn posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4(posh_atom,storage_key,((function (true_poshdb,storage_key,posh_atom){\nreturn (function (p1__46962_SHARP_){\nreturn posh.core.add_pull(p1__46962_SHARP_,true_poshdb,pull_pattern,eid);\n});})(true_poshdb,storage_key,posh_atom))\n,options);\n});\n\nposh.reagent.pull.cljs$core$IFn$_invoke$arity$3 = (function (poshdb,pull_pattern,eid){\nreturn posh.reagent.pull.cljs$core$IFn$_invoke$arity$4(poshdb,pull_pattern,eid,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nposh.reagent.pull.cljs$lang$maxFixedArity = 4;\n\nposh.reagent.pull_info = (function posh$reagent$pull_info(poshdb,pull_pattern,eid){\nvar true_poshdb = posh.reagent.get_db(poshdb);\nvar storage_key = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"pull\",\"pull\",-860544805),true_poshdb,pull_pattern,eid], null);\nvar posh_atom = posh.reagent.get_posh_atom(poshdb);\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(posh.lib.update.update_pull(cljs.core.deref(posh_atom),storage_key),new cljs.core.Keyword(null,\"reload-fn\",\"reload-fn\",-1150160860));\n});\nposh.reagent.pull_tx = (function posh$reagent$pull_tx(tx_patterns,poshdb,pull_pattern,eid){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"pull-tx is deprecated. Calling pull without your tx-patterns.\"], 0));\n\nreturn posh.reagent.pull.cljs$core$IFn$_invoke$arity$3(poshdb,pull_pattern,eid);\n});\nposh.reagent.parse_q_query = (function posh$reagent$parse_q_query(query){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__46965,query_item){\nvar vec__46966 = p__46965;\nvar parsed_query = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46966,(0),null);\nvar last_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46966,(1),null);\nif((query_item instanceof cljs.core.Keyword)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parsed_query,query_item,cljs.core.PersistentVector.EMPTY),query_item], null);\n} else {\nif(cljs.core.truth_(last_key)){\n} else {\nthrow (new Error(\"Assert failed: last-key\"));\n}\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.cljs$core$IFn$_invoke$arity$4(parsed_query,last_key,cljs.core.conj,query_item),last_key], null);\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY,null], null),query));\n});\nposh.reagent.q_args_count = (function posh$reagent$q_args_count(query){\nvar parsed_query = posh.reagent.parse_q_query(query);\nvar temp__5733__auto__ = new cljs.core.Keyword(null,\"in\",\"in\",-1531184865).cljs$core$IFn$_invoke$arity$1(parsed_query);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar in_clause = temp__5733__auto__;\nreturn cljs.core.count(in_clause);\n} else {\nreturn (1);\n}\n});\n/**\n * Returns a datalog query reaction. If args count doens't match the query's input count, a final options map argument\n *   is accepted. This options map may specify `:cache :forever`, which keeps query results cached even if the reaction is\n *   disposed.\n */\nposh.reagent.q = (function posh$reagent$q(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___47043 = arguments.length;\nvar i__4731__auto___47045 = (0);\nwhile(true){\nif((i__4731__auto___47045 < len__4730__auto___47043)){\nargs__4736__auto__.push((arguments[i__4731__auto___47045]));\n\nvar G__47046 = (i__4731__auto___47045 + (1));\ni__4731__auto___47045 = G__47046;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn posh.reagent.q.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nposh.reagent.q.cljs$core$IFn$_invoke$arity$variadic = (function (query,args){\nvar n_query_args = posh.reagent.q_args_count(query);\nvar vec__46973 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n_query_args,cljs.core.count(args)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [args,cljs.core.PersistentArrayMap.EMPTY], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((n_query_args + (1)),cljs.core.count(args)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.butlast(args),cljs.core.last(args)], null):(function(){throw \"Incorrect number of args passed to posh query\"})()\n));\nvar args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46973,(0),null);\nvar options = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46973,(1),null);\nvar true_poshdb_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (n_query_args,vec__46973,args__$1,options){\nreturn (function (p1__46969_SHARP_){\nif(datascript.core.conn_QMARK_(p1__46969_SHARP_)){\nreturn posh.reagent.get_db(p1__46969_SHARP_);\n} else {\nreturn p1__46969_SHARP_;\n}\n});})(n_query_args,vec__46973,args__$1,options))\n,args__$1);\nvar posh_atom = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(posh.reagent.get_posh_atom,args__$1)));\nvar storage_key = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"q\",\"q\",689001697),query,true_poshdb_args], null);\nreturn posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4(posh_atom,storage_key,((function (n_query_args,vec__46973,args__$1,options,true_poshdb_args,posh_atom,storage_key){\nreturn (function (p1__46970_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(posh.core.add_q,p1__46970_SHARP_,query),true_poshdb_args);\n});})(n_query_args,vec__46973,args__$1,options,true_poshdb_args,posh_atom,storage_key))\n,options);\n});\n\nposh.reagent.q.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nposh.reagent.q.cljs$lang$applyTo = (function (seq46971){\nvar G__46972 = cljs.core.first(seq46971);\nvar seq46971__$1 = cljs.core.next(seq46971);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46972,seq46971__$1);\n});\n\nposh.reagent.q_info = (function posh$reagent$q_info(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___47051 = arguments.length;\nvar i__4731__auto___47052 = (0);\nwhile(true){\nif((i__4731__auto___47052 < len__4730__auto___47051)){\nargs__4736__auto__.push((arguments[i__4731__auto___47052]));\n\nvar G__47053 = (i__4731__auto___47052 + (1));\ni__4731__auto___47052 = G__47053;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn posh.reagent.q_info.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nposh.reagent.q_info.cljs$core$IFn$_invoke$arity$variadic = (function (query,args){\nvar true_poshdb_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46976_SHARP_){\nif(datascript.core.conn_QMARK_(p1__46976_SHARP_)){\nreturn posh.reagent.get_db(p1__46976_SHARP_);\n} else {\nreturn p1__46976_SHARP_;\n}\n}),args);\nvar posh_atom = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(posh.reagent.get_posh_atom,args)));\nvar storage_key = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"q\",\"q\",689001697),query,true_poshdb_args], null);\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(posh.lib.update.update_q(cljs.core.deref(posh_atom),storage_key),new cljs.core.Keyword(null,\"reload-fn\",\"reload-fn\",-1150160860));\n});\n\nposh.reagent.q_info.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nposh.reagent.q_info.cljs$lang$applyTo = (function (seq46977){\nvar G__46978 = cljs.core.first(seq46977);\nvar seq46977__$1 = cljs.core.next(seq46977);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46978,seq46977__$1);\n});\n\nposh.reagent.q_tx = (function posh$reagent$q_tx(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___47058 = arguments.length;\nvar i__4731__auto___47059 = (0);\nwhile(true){\nif((i__4731__auto___47059 < len__4730__auto___47058)){\nargs__4736__auto__.push((arguments[i__4731__auto___47059]));\n\nvar G__47060 = (i__4731__auto___47059 + (1));\ni__4731__auto___47059 = G__47060;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn posh.reagent.q_tx.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\nposh.reagent.q_tx.cljs$core$IFn$_invoke$arity$variadic = (function (tx_patterns,query,args){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"q-tx is deprecated. Calling q without your tx-patterns.\"], 0));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(posh.reagent.q,query,args);\n});\n\nposh.reagent.q_tx.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\nposh.reagent.q_tx.cljs$lang$applyTo = (function (seq46979){\nvar G__46980 = cljs.core.first(seq46979);\nvar seq46979__$1 = cljs.core.next(seq46979);\nvar G__46981 = cljs.core.first(seq46979__$1);\nvar seq46979__$2 = cljs.core.next(seq46979__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46980,G__46981,seq46979__$2);\n});\n\nposh.reagent.filter_tx = (function posh$reagent$filter_tx(poshdb,tx_patterns){\nreturn posh.stateful.add_filter_tx(posh.reagent.get_db(poshdb),tx_patterns);\n});\nposh.reagent.filter_pull = (function posh$reagent$filter_pull(poshdb,pull_pattern,eid){\nreturn posh.stateful.add_filter_pull(posh.reagent.get_db(poshdb),pull_pattern,eid);\n});\nposh.reagent.filter_q = (function posh$reagent$filter_q(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___47064 = arguments.length;\nvar i__4731__auto___47065 = (0);\nwhile(true){\nif((i__4731__auto___47065 < len__4730__auto___47064)){\nargs__4736__auto__.push((arguments[i__4731__auto___47065]));\n\nvar G__47066 = (i__4731__auto___47065 + (1));\ni__4731__auto___47065 = G__47066;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn posh.reagent.filter_q.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nposh.reagent.filter_q.cljs$core$IFn$_invoke$arity$variadic = (function (query,args){\nvar true_poshdb_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__46982_SHARP_){\nif(datascript.core.conn_QMARK_(p1__46982_SHARP_)){\nreturn posh.reagent.get_db(p1__46982_SHARP_);\n} else {\nreturn p1__46982_SHARP_;\n}\n}),args);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(posh.stateful.add_filter_q,query,true_poshdb_args);\n});\n\nposh.reagent.filter_q.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nposh.reagent.filter_q.cljs$lang$applyTo = (function (seq46983){\nvar G__46984 = cljs.core.first(seq46983);\nvar seq46983__$1 = cljs.core.next(seq46983);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46984,seq46983__$1);\n});\n\nposh.reagent.transact_BANG_ = (function posh$reagent$transact_BANG_(poshdb_or_conn,txs){\nreturn datascript.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2(((datascript.core.conn_QMARK_(poshdb_or_conn))?poshdb_or_conn:posh.stateful.poshdb__GT_conn(poshdb_or_conn)),txs);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","posh/reagent.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react","~$create-react-class","~$shadow.js.shim.module$create_react_class","~$react-dom","~$shadow.js.shim.module$react_dom"],"~:use-macros",["^ ","~$reaction","~$reagent.ratom"],"~:excludes",["~#set",[]],"~:name","~$posh.reagent","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$p","~$posh.core","~$ps","~$posh.stateful","~$u","~$posh.lib.update","^F","^F","~$reagent.core","^S","~$r","^S","~$cljs.core","^T","~$goog","^U","~$posh.lib.db","^V","~$datascript.core","^W","~$db","^V","^Q","^Q","~$ra","^F","^O","^O","^R","^R","~$d","^W"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",null,"^10",["^ ","^F","^F","^T","^T","^S","^S","~$r","^S","^Y","^F"],"~:form",["~#list",["~$ns","^J",["^13",["^10",["^F","~:refer",["^E"]]]],["^13",["^[",["^O","~:as","~$p"],["^Q","^16","^P"],["^V","^16","^X"],["^R","^16","~$u"],["^W","^16","~$d"],["^S","^16","~$r"],["^F","^16","^Y"]]]]],"~:flags",["^ ","^10",["^H",[]],"^[",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^O","^Q","^V","^R","^W","^S","^F"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","posh/reagent.cljs"],"~:compiled-at",1562950765146,"~:resource-name","posh/reagent.cljs","~:warnings",[],"~:source","(ns posh.reagent\n  (:require-macros [reagent.ratom :refer [reaction]])\n  (:require [posh.core :as p]\n            [posh.stateful :as ps]\n            [posh.lib.db :as db]\n            [posh.lib.update :as u]\n            [datascript.core :as d]\n            [reagent.core :as r]\n            [reagent.ratom :as ra]))\n\n(defn missing-pull-result\n  [pull-expr]\n  (when (some #{:db/id} pull-expr)\n    {:db/id nil}))\n\n(defn safe-pull\n  [db query id]\n  (cond\n    (integer? id)\n    (d/pull db query id)\n    (vector? id)\n    (if-let [eid (d/entid db id)]\n      (d/pull db query eid)\n      (missing-pull-result query))\n    (nil? id)\n    (missing-pull-result query)))\n\n\n(def dcfg\n  {:db d/db\n   :pull safe-pull\n   :q d/q\n   :filter d/filter\n   :with d/with\n   :entid d/entid\n   :transact! d/transact!})\n\n\n;; need to set last-tx-t in conn so that it doesn't try the same tx twice\n(defn set-conn-listener! [posh-atom conn db-id]\n  (let [posh-vars {:posh-atom posh-atom\n                   :db-id db-id}]\n    (do\n      (d/listen! conn :posh-dispenser\n                 (fn [var]\n                   (when (keyword? var)\n                     (get posh-vars var))))\n      (add-watch conn :posh-schema-listener\n                 (fn [_ _ old-state new-state]\n                   (when (not= (:schema old-state) (:schema new-state))\n                     (swap! posh-atom assoc-in [:schema db-id] (:schema new-state)))))\n                     ;; Update posh conn\n      (d/listen! conn :posh-listener\n                 (fn [tx-report]\n                   ;;(println \"CHANGED: \" (keys (:changed (p/after-transact @posh-atom {conn tx-report}))))\n                   (let [{:keys [ratoms changed]}\n                         (swap! posh-atom p/after-transact {conn tx-report})]\n                     (doseq [[k v] changed]\n                       (reset! (get ratoms k) (:results v))))))\n      conn)))\n\n\n(defn posh! [& conns]\n  (let [posh-atom (atom {})]\n    (reset! posh-atom\n            (loop [n 0\n                   conns conns\n                   posh-tree (-> (p/empty-tree dcfg [:results])\n                                 (assoc :ratoms {}\n                                        :reactions {}))]\n              (if (empty? conns)\n                posh-tree\n                (recur (inc n)\n                       (rest conns)\n                       (let [db-id (keyword (str \"conn\" n))]\n                         (p/add-db posh-tree \n                                   db-id\n                                   (set-conn-listener! posh-atom (first conns) db-id)\n                                   (:schema @(first conns))))))))))\n\n\n;; Posh's state atoms are stored inside a listener in the meta data of\n;; the datascript conn\n(defn get-conn-var [conn var]\n  ((:posh-dispenser @(:listeners (meta conn))) var))\n\n(defn get-posh-atom [poshdb-or-conn]\n  (if (d/conn? poshdb-or-conn)\n    (get-conn-var poshdb-or-conn :posh-atom)\n    (ps/get-posh-atom poshdb-or-conn)))\n\n(defn get-db [poshdb-or-conn]\n  (if (d/conn? poshdb-or-conn)\n    (with-meta\n      [:db (get-conn-var poshdb-or-conn :db-id)]\n      {:posh (get-conn-var poshdb-or-conn :posh-atom)})\n    poshdb-or-conn))\n\n(defn rm-posh-item [posh-atom storage-key]\n  (swap! posh-atom\n         (fn [posh-atom-val]\n           (assoc (p/remove-item posh-atom-val storage-key)\n             :ratoms (dissoc (:ratoms posh-atom-val) storage-key)\n             :reactions (dissoc (:reactions posh-atom-val) storage-key)))))\n\n(defn make-query-reaction\n  ([posh-atom storage-key add-query-fn options]\n   (if-let [r (get-in @posh-atom [:reactions storage-key])]\n     r\n     (->\n       (swap!\n         posh-atom\n         (fn [posh-atom-val]\n           (let [posh-atom-with-query (add-query-fn posh-atom-val)\n                 query-result         (:results (get (:cache posh-atom-with-query) storage-key))\n                 query-ratom          (or (get (:ratoms posh-atom-with-query) storage-key)\n                                          (r/atom query-result))\n                 query-reaction       (ra/make-reaction\n                                        (fn []\n                                          ;;(println \"RENDERING: \" storage-key)\n                                          @query-ratom)\n                                        :on-dispose\n                                        (fn [_ _]\n                                          ;;(println \"no DISPOSING: \" storage-key)\n                                          (when-not (= (:cache options) :forever)\n                                            (swap! posh-atom\n                                                   (fn [posh-atom-val]\n                                                     (assoc (p/remove-item posh-atom-val storage-key)\n                                                       :ratoms (dissoc (:ratoms posh-atom-val) storage-key)\n                                                       :reactions (dissoc (:reactions posh-atom-val) storage-key)))))))]\n             (assoc posh-atom-with-query\n               :ratoms (assoc (:ratoms posh-atom-with-query) storage-key query-ratom)\n               :reactions (assoc (:reactions posh-atom-with-query) storage-key query-reaction)))))\n       :reactions\n       (get storage-key))))\n  ([posh-atom storage-key add-query-fn]\n   (make-query-reaction posh-atom storage-key add-query-fn {})))\n\n(defn pull\n  \"Returns a reaction of a pull expression. The options argument may specify `:cache :forever`, which keeps query results\n  cached indefinitely, even if the reaction is disposed.\"\n  ([poshdb pull-pattern eid options]\n   (let [true-poshdb (get-db poshdb)\n         storage-key [:pull true-poshdb pull-pattern eid]\n         posh-atom   (get-posh-atom poshdb)]\n     (make-query-reaction posh-atom\n                          storage-key\n                          #(p/add-pull % true-poshdb pull-pattern eid)\n                          options)))\n  ([poshdb pull-pattern eid]\n   (pull poshdb pull-pattern eid {})))\n\n(defn pull-info [poshdb pull-pattern eid]\n  (let [true-poshdb (get-db poshdb)\n        storage-key [:pull true-poshdb pull-pattern eid]\n        posh-atom   (get-posh-atom poshdb)]\n    (dissoc\n     (u/update-pull @posh-atom storage-key)\n     :reload-fn)))\n\n(defn pull-tx [tx-patterns poshdb pull-pattern eid]\n  (println \"pull-tx is deprecated. Calling pull without your tx-patterns.\")\n  (pull poshdb pull-pattern eid))\n\n;;; q needs to find the posh-atom, go through args and convert any\n;;; conn's to true-poshdb's, generate the storage-key with true dbs\n\n(defn parse-q-query\n  [query]\n  (first\n    (reduce\n      (fn [[parsed-query last-key] query-item]\n        (if (keyword? query-item)\n          [(assoc parsed-query query-item [])\n           query-item]\n          (do\n            (assert last-key)\n            [(update parsed-query last-key conj query-item)\n             last-key])))\n      [{} nil]\n      query)))\n\n(defn q-args-count\n  ;; Really should be conforming to a spec for this... :-/\n  [query]\n  (let [parsed-query (parse-q-query query)]\n    (if-let [in-clause (:in parsed-query)]\n      (count in-clause)\n      1)))\n\n(defn q\n  \"Returns a datalog query reaction. If args count doens't match the query's input count, a final options map argument\n  is accepted. This options map may specify `:cache :forever`, which keeps query results cached even if the reaction is\n  disposed.\"\n  [query & args]\n  (let [n-query-args     (q-args-count query)\n        [args options]   (cond\n                           (= n-query-args (count args))\n                           [args {}]\n                           (= (inc n-query-args) (count args))\n                           [(butlast args) (last args)]\n                           :else\n                           (throw \"Incorrect number of args passed to posh query\"))\n        true-poshdb-args (map #(if (d/conn? %) (get-db %) %) args)\n        posh-atom        (first (remove nil? (map get-posh-atom args)))\n        storage-key      [:q query true-poshdb-args]]\n    (make-query-reaction posh-atom\n                         storage-key\n                         #(apply (partial p/add-q % query) true-poshdb-args)\n                         options)))\n\n(defn q-info [query & args]\n  (let [true-poshdb-args (map #(if (d/conn? %) (get-db %) %) args)\n        posh-atom        (first (remove nil? (map get-posh-atom args)))\n        storage-key      [:q query true-poshdb-args]]\n    (dissoc\n     (u/update-q @posh-atom storage-key)\n     :reload-fn)))\n\n(defn q-tx [tx-patterns query & args]\n  (println \"q-tx is deprecated. Calling q without your tx-patterns.\")\n  (apply q query args))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defn filter-tx [poshdb tx-patterns]\n  (ps/add-filter-tx (get-db poshdb) tx-patterns))\n\n(defn filter-pull [poshdb pull-pattern eid]\n  (ps/add-filter-pull (get-db poshdb) pull-pattern eid))\n\n(defn filter-q [query & args]\n  (let [true-poshdb-args (map #(if (d/conn? %) (get-db %) %) args)]\n    (apply ps/add-filter-q query true-poshdb-args)))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defn transact! [poshdb-or-conn txs]\n  (d/transact!\n   (if (d/conn? poshdb-or-conn)\n     poshdb-or-conn\n     (ps/poshdb->conn poshdb-or-conn))\n   txs))\n\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["posh.reagent/missing-pull-result","pull-expr","cljs.core/some","posh.reagent/safe-pull","db","query","id","cljs.core/integer?","datascript.core/pull","cljs.core/vector?","temp__5733__auto__","eid","datascript.core/entid","posh.reagent/dcfg","datascript.core/db","datascript.core/q","datascript.core/filter","datascript.core/with","datascript.core/transact!","posh.reagent/set-conn-listener!","posh-atom","conn","db-id","posh-vars","datascript.core.listen_BANG_.cljs$core$IFn$_invoke$arity$3","var","cljs.core/Keyword","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/add-watch","_","old-state","new-state","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","tx-report","map__46940","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","ratoms","changed","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","posh.core/after-transact","seq__46942","cljs.core/seq","chunk__46943","count__46944","i__46945","vec__46952","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__46955","cljs.core/first","cljs.core/next","k","v","cljs.core/reset!","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","posh.reagent/posh!","seq46958","self__4718__auto__","conns","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","n","posh-tree","posh.core/empty-tree","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/empty?","cljs.core/rest","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","posh.core.add_db.cljs$core$IFn$_invoke$arity$4","cljs.core/deref","posh.reagent/get-conn-var","fexpr__46959","cljs.core/meta","posh.reagent/get-posh-atom","poshdb-or-conn","datascript.core/conn?","posh.stateful/get-posh-atom","posh.reagent/get-db","cljs.core/with-meta","posh.reagent/rm-posh-item","storage-key","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","posh-atom-val","posh.core/remove-item","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","G__46961","posh.reagent/make-query-reaction","js/Error","add-query-fn","options","r","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","posh-atom-with-query","query-result","query-ratom","or__4131__auto__","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","query-reaction","reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","posh.reagent.make_query_reaction.cljs$core$IFn$_invoke$arity$4","G__46964","posh.reagent/pull","poshdb","pull-pattern","true-poshdb","p1__46962#","posh.core/add-pull","posh.reagent.pull.cljs$core$IFn$_invoke$arity$4","posh.reagent/pull-info","posh.lib.update/update-pull","posh.reagent/pull-tx","tx-patterns","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","posh.reagent.pull.cljs$core$IFn$_invoke$arity$3","posh.reagent/parse-q-query","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__46965","vec__46966","parsed-query","last-key","query-item","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","posh.reagent/q-args-count","in-clause","posh.reagent/q","seq46971","G__46972","self__4717__auto__","args","vec__46973","n-query-args","cljs.core/butlast","cljs.core/last","true-poshdb-args","p1__46969#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","p1__46970#","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","posh.core/add-q","posh.reagent/q-info","seq46977","G__46978","p1__46976#","posh.lib.update/update-q","posh.reagent/q-tx","seq46979","G__46980","G__46981","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","posh.reagent/filter-tx","posh.stateful/add-filter-tx","posh.reagent/filter-pull","posh.stateful/add-filter-pull","posh.reagent/filter-q","seq46983","G__46984","p1__46982#","posh.stateful/add-filter-q","posh.reagent/transact!","txs","datascript.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2","posh.stateful/poshdb->conn"]]],"~:cache-keys",["~#cmap",[["^1;","datascript/db.cljc"],[1562948138000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^U","^T","~$goog.array","~$clojure.walk","~$clojure.data","~$me.tonsky.persistent-sorted-set","~$me.tonsky.persistent-sorted-set.arrays"]]],["^1;","reagent/impl/batching.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^1;","datascript/parser.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$clojure.set","~$datascript.db"]]],["~:macro","^T"],[1562948133000],["^1;","posh/lib/q_analyze.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$posh.lib.util","^W","~$posh.lib.datom-matcher","~$posh.lib.pull-analyze","~$cljs.core.match"]]],["^1;","posh/lib/graph.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","datascript/core.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1V","~$datascript.pull-api","~$datascript.query","~$datascript.impl.entity"]]],["^1;","cljs/tools/reader/impl/utils.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1T","~$goog.string"]]],["^1;","goog/math/math.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^1L","~$goog.asserts"]]],["^1W","^1Q"],[1562948138000],["^1;","goog/array/array.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^24"]]],["^1;","reagent/impl/util.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1Q","^1R","^1T"]]],["^1W","~$cljs.tools.reader.reader-types"],[1562948130000],["^1;","goog/debug/error.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["~:shadow.build.js-support/require","create-react-class"],["^A","shadow.js.shim.module$create_react_class.js","^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","cljs/tools/reader/edn.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$cljs.tools.reader.impl.errors","^25","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^23","~$goog.string.StringBuffer"]]],["^1;","datascript/query.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$cljs.reader","^1U","^1T","^1M","^1V","^1P","~$datascript.lru","^22","~$datascript.parser","^20","~$datascript.pull-parser"]]],["^1;","goog/dom/nodetype.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","cljs/tools/reader/impl/inspect.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1W","^S"],[1562948138000],["^1;","cljs/tools/reader.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^25","^28","^29","^27","^1L","^23","^2;"]]],["^1;","reagent/ratom.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1S","^1Q","~$reagent.impl.batching","^1U"]]],["^1;","goog/object/object.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","reagent/impl/template.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^?","^1T","^1M","^1S","~$reagent.impl.component","^2@","^F","^1R","^1Q"]]],"~:SHADOW-TIMESTAMP",[1562948138000,1562948133000],["^1W","^F"],[1562948138000],["^1;","goog/math/long.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^24","~$goog.reflect"]]],["^1W","^1P"],[1562948138000],["^1;","posh/lib/update.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^W","^1X","^1Y","^1Z","~$posh.lib.q-analyze","^V"]]],["^1W","^1R"],[1562948138000],["^1;","goog/string/internal.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","datascript/pull_api.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1V","^2?"]]],["^1;","goog/functions/functions.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","reagent/impl/component.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^A","^?","^1S","^2@","^F","^1R","^1Q"]]],["^1;","clojure/walk.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","goog/structs/map.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1;","posh/lib/datom_matcher.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1U"]]],["^1;","posh/core.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1X","^1Y","^1Z","^2D","^R","^V","~$posh.lib.graph"]]],["^1;","posh/lib/util.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","datascript/impl/entity.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1V"]]],["^1;","me/tonsky/persistent_sorted_set/arrays.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1T"]]],["^1;","cljs/reader.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","~$goog.object","^2:","~$cljs.tools.reader.edn","^2;"]]],["^1W","^1V"],[1562948138000],["^1;","goog/asserts/asserts.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1;","me/tonsky/persistent_sorted_set.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1P"]]],["^1;","goog/uri/uri.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^1L","^24","^23","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1W","^1["],[1562948135000],["^1;","cljs/core/match.cljs"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","posh/stateful.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^O","^V","^R"]]],["^1;","goog/base.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",[]]],["^1;","goog/structs/structs.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^1L","^2H"]]],["^1;","cljs/tools/reader/impl/errors.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^25","^1T","~$cljs.tools.reader.impl.inspect"]]],["^1;","clojure/string.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^23","^2;"]]],["^1;","datascript/pull_parser.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1V"]]],["^1W","^2>"],[1562948138000],["^26","react"],["^?","shadow.js.shim.module$react.js","^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","posh/reagent.cljs"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^O","^Q","^V","^R","^W","^S","^F"]]],["^1;","goog/string/string.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","~$goog.string.internal"]]],["^1;","clojure/data.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1U"]]],["^1;","goog/reflect/reflect.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","reagent/core.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^?","~$reagent.impl.template","^2A","^1S","^2@","^F","^1Q","^1R","~$reagent.dom"]]],["^1;","goog/string/stringbuffer.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","cljs/tools/reader/reader_types.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^28","^23","^2;"]]],["^1;","goog/iter/iter.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^1L","^24","~$goog.functions","~$goog.math"]]],["^1;","reagent/dom.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^C","^1S","^2S","^2@","^F","^1Q","^1R"]]],["^1;","datascript/lru.cljc"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","cljs/tools/reader/impl/commons.cljs"],[1562948130000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^27","^25","^28"]]],["^1;","reagent/interop.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","cljs/core.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["~$goog.math.Long","~$goog.math.Integer","^23","^2H","^1L","~$goog.Uri","^2;"]]],["^1;","reagent/debug.cljs"],[1562948138000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","goog/math/integer.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","posh/lib/pull_analyze.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1X","^1Y"]]],["^26","react-dom"],["^C","shadow.js.shim.module$react_dom.js","^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U"]]],["^1;","clojure/set.cljs"],[1562948133000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T"]]],["^1;","goog/uri/utils.js"],[1562948135000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^1L","^24","^23"]]],["^1;","posh/lib/db.cljc"],[1562948137000,"^1H",["^ ","^1I",null,"^1J",["^H",[]],"^1K",["^U","^T","^1Y"]]],["^1W","^2<"],[1562948133000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","posh/reagent.cljs","^7",1,"^8",5,"^9",1,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","~$p","^O","^P","^Q","~$u","^R","^F","^F","^S","^S","~$r","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^V","^Q","^Q","^Y","^F","^O","^O","^R","^R","~$d","^W"],"^Z",["^H",["^[","^10"]],"~:shadow/js-access-global",["^H",["Error"]],"^11",null,"~:defs",["^ ","~$safe-pull",["^ ","~:protocol-inline",null,"^5",["^ ","^6","posh/reagent.cljs","^7",16,"^8",7,"^9",16,"^:",16,"~:arglists",["^13",["~$quote",["^13",[["^X","~$query","~$id"]]]]]],"^I","~$posh.reagent/safe-pull","^6","posh/reagent.cljs","^:",16,"~:method-params",["^13",[["^X","^35","^36"]]],"~:protocol-impl",null,"~:arglists-meta",["^13",[null,null]],"^8",1,"~:variadic?",false,"^7",16,"~:ret-tag",["^H",["~$any","~$cljs.core/IMap","~$clj-nil"]],"^9",16,"~:max-fixed-arity",3,"~:fn-var",true,"^33",["^13",["^34",["^13",[["^X","^35","^36"]]]]]],"~$pull",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",139,"^8",7,"^9",139,"^:",11,"^33",["^13",["^34",["^13",[["~$poshdb","~$pull-pattern","~$eid","~$options"],["^3C","^3D","^3E"]]]]],"~:doc","Returns a reaction of a pull expression. The options argument may specify `:cache :forever`, which keeps query results\n  cached indefinitely, even if the reaction is disposed.","~:top-fn",["^ ","^3;",false,"~:fixed-arity",4,"^3@",4,"^38",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^33",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^3:",["^13",[null,null]]]],"^I","~$posh.reagent/pull","^6","posh/reagent.cljs","^:",11,"^3H",["^ ","^3;",false,"^3I",4,"^3@",4,"^38",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^33",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^3:",["^13",[null,null]]],"^38",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^39",null,"^3I",4,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"~:methods",[["^ ","^3I",4,"^3;",false,"~:tag",["^H",[null,"^3=","^3?"]]],["^ ","^3I",3,"^3;",false,"^3L",["^H",[null,"^3=","^3?"]]]],"^7",139,"^9",139,"^3@",4,"^3A",true,"^33",["^13",[["^3C","^3D","^3E","^3F"],["^3C","^3D","^3E"]]],"^3G","Returns a reaction of a pull expression. The options argument may specify `:cache :forever`, which keeps query results\n  cached indefinitely, even if the reaction is disposed."],"~$get-db",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",92,"^8",7,"^9",92,"^:",13,"^33",["^13",["^34",["^13",[["~$poshdb-or-conn"]]]]]],"^I","~$posh.reagent/get-db","^6","posh/reagent.cljs","^:",13,"^38",["^13",[["^3N"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",92,"^3<",["^H",[null,"~$clj","~$cljs.core/MetaFn","^3?"]],"^9",92,"^3@",1,"^3A",true,"^33",["^13",["^34",["^13",[["^3N"]]]]]],"~$q-info",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",212,"^8",7,"^9",212,"^:",13,"^33",["^13",["^34",["^13",[["^35","~$&","~$args"]]]]],"^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]]],"^I","~$posh.reagent/q-info","^6","posh/reagent.cljs","^:",13,"^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]],"^38",[["^13",["^35","^3S"]]],"^39",null,"^3I",1,"^3:",["^13",[null]],"^8",1,"^3;",true,"^3K",[["^ ","^3I",1,"^3;",true,"^3L",["^H",["^3P","^3?"]]]],"^7",212,"^3<","^3=","^9",212,"^3@",1,"^3A",true,"^33",["^13",[["^35","~$&","^3S"]]]],"~$q-args-count",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",183,"^8",7,"^9",183,"^:",19,"^33",["^13",["^34",["^13",[["^35"]]]]]],"^I","~$posh.reagent/q-args-count","^6","posh/reagent.cljs","^:",19,"^38",["^13",[["^35"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",183,"^3<","~$number","^9",183,"^3@",1,"^3A",true,"^33",["^13",["^34",["^13",[["^35"]]]]]],"~$q",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",191,"^8",7,"^9",191,"^:",8,"^33",["^13",["^34",["^13",[["^35","~$&","^3S"]]]]],"^3G","Returns a datalog query reaction. If args count doens't match the query's input count, a final options map argument\n  is accepted. This options map may specify `:cache :forever`, which keeps query results cached even if the reaction is\n  disposed.","^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]]],"^I","~$posh.reagent/q","^6","posh/reagent.cljs","^:",8,"^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]],"^38",[["^13",["^35","^3S"]]],"^39",null,"^3I",1,"^3:",["^13",[null]],"^8",1,"^3;",true,"^3K",[["^ ","^3I",1,"^3;",true,"^3L",["^H",[null,"^3=","^3?"]]]],"^7",191,"^3<","^3=","^9",191,"^3@",1,"^3A",true,"^33",["^13",[["^35","~$&","^3S"]]],"^3G","Returns a datalog query reaction. If args count doens't match the query's input count, a final options map argument\n  is accepted. This options map may specify `:cache :forever`, which keeps query results cached even if the reaction is\n  disposed."],"~$set-conn-listener!",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",40,"^8",7,"^9",40,"^:",25,"^33",["^13",["^34",["^13",[["~$posh-atom","~$conn","~$db-id"]]]]]],"^I","~$posh.reagent/set-conn-listener!","^6","posh/reagent.cljs","^:",25,"^38",["^13",[["^3Z","^3[","^40"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",40,"^9",40,"^3@",3,"^3A",true,"^33",["^13",["^34",["^13",[["^3Z","^3[","^40"]]]]]],"~$get-posh-atom",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",87,"^8",7,"^9",87,"^:",20,"^33",["^13",["^34",["^13",[["^3N"]]]]]],"^I","~$posh.reagent/get-posh-atom","^6","posh/reagent.cljs","^:",20,"^38",["^13",[["^3N"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",87,"^3<","^3=","^9",87,"^3@",1,"^3A",true,"^33",["^13",["^34",["^13",[["^3N"]]]]]],"~$rm-posh-item",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",99,"^8",7,"^9",99,"^:",19,"^33",["^13",["^34",["^13",[["^3Z","~$storage-key"]]]]]],"^I","~$posh.reagent/rm-posh-item","^6","posh/reagent.cljs","^:",19,"^38",["^13",[["^3Z","^45"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",99,"^3<",["^H",[null,"^3="]],"^9",99,"^3@",2,"^3A",true,"^33",["^13",["^34",["^13",[["^3Z","^45"]]]]]],"~$pull-info",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",153,"^8",7,"^9",153,"^:",16,"^33",["^13",["^34",["^13",[["^3C","^3D","^3E"]]]]]],"^I","~$posh.reagent/pull-info","^6","posh/reagent.cljs","^:",16,"^38",["^13",[["^3C","^3D","^3E"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",153,"^3<",["^H",["^3P","^3?"]],"^9",153,"^3@",3,"^3A",true,"^33",["^13",["^34",["^13",[["^3C","^3D","^3E"]]]]]],"~$parse-q-query",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",168,"^8",7,"^9",168,"^:",20,"^33",["^13",["^34",["^13",[["^35"]]]]]],"^I","~$posh.reagent/parse-q-query","^6","posh/reagent.cljs","^:",20,"^38",["^13",[["^35"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",168,"^3<",["^H",["^3=","^3?"]],"^9",168,"^3@",1,"^3A",true,"^33",["^13",["^34",["^13",[["^35"]]]]]],"~$transact!",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",239,"^8",7,"^9",239,"^:",16,"^33",["^13",["^34",["^13",[["^3N","~$txs"]]]]]],"^I","~$posh.reagent/transact!","^6","posh/reagent.cljs","^:",16,"^38",["^13",[["^3N","^4<"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",239,"^3<","^3=","^9",239,"^3@",2,"^3A",true,"^33",["^13",["^34",["^13",[["^3N","^4<"]]]]]],"~$filter-pull",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",230,"^8",7,"^9",230,"^:",18,"^33",["^13",["^34",["^13",[["^3C","^3D","^3E"]]]]]],"^I","~$posh.reagent/filter-pull","^6","posh/reagent.cljs","^:",18,"^38",["^13",[["^3C","^3D","^3E"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",230,"^3<",["^H",["^3P","^3Q","^3?"]],"^9",230,"^3@",3,"^3A",true,"^33",["^13",["^34",["^13",[["^3C","^3D","^3E"]]]]]],"~$q-tx",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",220,"^8",7,"^9",220,"^:",11,"^33",["^13",["^34",["^13",[["~$tx-patterns","^35","~$&","^3S"]]]]],"^3H",["^ ","^3;",true,"^3I",2,"^3@",2,"^38",[["^13",["^4A","^35","^3S"]]],"^33",["^13",[["^4A","^35","~$&","^3S"]]],"^3:",["^13",[null]]]],"^I","~$posh.reagent/q-tx","^6","posh/reagent.cljs","^:",11,"^3H",["^ ","^3;",true,"^3I",2,"^3@",2,"^38",[["^13",["^4A","^35","^3S"]]],"^33",["^13",[["^4A","^35","~$&","^3S"]]],"^3:",["^13",[null]]],"^38",[["^13",["^4A","^35","^3S"]]],"^39",null,"^3I",2,"^3:",["^13",[null]],"^8",1,"^3;",true,"^3K",[["^ ","^3I",2,"^3;",true,"^3L","^3="]],"^7",220,"^3<","^3=","^9",220,"^3@",2,"^3A",true,"^33",["^13",[["^4A","^35","~$&","^3S"]]]],"~$filter-q",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",233,"^8",7,"^9",233,"^:",15,"^33",["^13",["^34",["^13",[["^35","~$&","^3S"]]]]],"^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]]],"^I","~$posh.reagent/filter-q","^6","posh/reagent.cljs","^:",15,"^3H",["^ ","^3;",true,"^3I",1,"^3@",1,"^38",[["^13",["^35","^3S"]]],"^33",["^13",[["^35","~$&","^3S"]]],"^3:",["^13",[null]]],"^38",[["^13",["^35","^3S"]]],"^39",null,"^3I",1,"^3:",["^13",[null]],"^8",1,"^3;",true,"^3K",[["^ ","^3I",1,"^3;",true,"^3L","^3="]],"^7",233,"^3<","^3=","^9",233,"^3@",1,"^3A",true,"^33",["^13",[["^35","~$&","^3S"]]]],"~$pull-tx",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",161,"^8",7,"^9",161,"^:",14,"^33",["^13",["^34",["^13",[["^4A","^3C","^3D","^3E"]]]]]],"^I","~$posh.reagent/pull-tx","^6","posh/reagent.cljs","^:",14,"^38",["^13",[["^4A","^3C","^3D","^3E"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",161,"^3<",["^H",[null,"^3=","^3?"]],"^9",161,"^3@",4,"^3A",true,"^33",["^13",["^34",["^13",[["^4A","^3C","^3D","^3E"]]]]]],"~$missing-pull-result",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",11,"^8",7,"^9",11,"^:",26,"^33",["^13",["^34",["^13",[["~$pull-expr"]]]]]],"^I","~$posh.reagent/missing-pull-result","^6","posh/reagent.cljs","^:",26,"^38",["^13",[["^4H"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",11,"^3<",["^H",["^3>","^3?"]],"^9",11,"^3@",1,"^3A",true,"^33",["^13",["^34",["^13",[["^4H"]]]]]],"~$posh!",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",63,"^8",7,"^9",63,"^:",12,"^33",["^13",["^34",["^13",[["~$&","~$conns"]]]]],"^3H",["^ ","^3;",true,"^3I",0,"^3@",0,"^38",[["^13",["^4K"]]],"^33",["^13",[["~$&","^4K"]]],"^3:",["^13",[null]]]],"^I","~$posh.reagent/posh!","^6","posh/reagent.cljs","^:",12,"^3H",["^ ","^3;",true,"^3I",0,"^3@",0,"^38",[["^13",["^4K"]]],"^33",["^13",[["~$&","^4K"]]],"^3:",["^13",[null]]],"^38",[["^13",["^4K"]]],"^39",null,"^3I",0,"^3:",["^13",[null]],"^8",1,"^3;",true,"^3K",[["^ ","^3I",0,"^3;",true,"^3L",["^H",[null,"^3="]]]],"^7",63,"^3<","^3=","^9",63,"^3@",0,"^3A",true,"^33",["^13",[["~$&","^4K"]]]],"~$filter-tx",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",227,"^8",7,"^9",227,"^:",16,"^33",["^13",["^34",["^13",[["^3C","^4A"]]]]]],"^I","~$posh.reagent/filter-tx","^6","posh/reagent.cljs","^:",16,"^38",["^13",[["^3C","^4A"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",227,"^3<",["^H",["^3P","^3Q","^3?"]],"^9",227,"^3@",2,"^3A",true,"^33",["^13",["^34",["^13",[["^3C","^4A"]]]]]],"~$get-conn-var",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",84,"^8",7,"^9",84,"^:",19,"^33",["^13",["^34",["^13",[["^3[","~$var"]]]]]],"^I","~$posh.reagent/get-conn-var","^6","posh/reagent.cljs","^:",19,"^38",["^13",[["^3[","^4P"]]],"^39",null,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^7",84,"^3<","^3=","^9",84,"^3@",2,"^3A",true,"^33",["^13",["^34",["^13",[["^3[","^4P"]]]]]],"~$make-query-reaction",["^ ","^32",null,"^5",["^ ","^6","posh/reagent.cljs","^7",106,"^8",7,"^9",106,"^:",26,"^33",["^13",["^34",["^13",[["^3Z","^45","~$add-query-fn","^3F"],["^3Z","^45","^4S"]]]]],"^3H",["^ ","^3;",false,"^3I",4,"^3@",4,"^38",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]],"^33",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]],"^3:",["^13",[null,null]]]],"^I","~$posh.reagent/make-query-reaction","^6","posh/reagent.cljs","^:",26,"^3H",["^ ","^3;",false,"^3I",4,"^3@",4,"^38",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]],"^33",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]],"^3:",["^13",[null,null]]],"^38",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]],"^39",null,"^3I",4,"^3:",["^13",[null,null]],"^8",1,"^3;",false,"^3K",[["^ ","^3I",4,"^3;",false,"^3L",["^H",[null,"^3=","^3?"]]],["^ ","^3I",3,"^3;",false,"^3L",["^H",[null,"^3=","^3?"]]]],"^7",106,"^9",106,"^3@",4,"^3A",true,"^33",["^13",[["^3Z","^45","^4S","^3F"],["^3Z","^45","^4S"]]]],"~$dcfg",["^ ","^I","~$posh.reagent/dcfg","^6","posh/reagent.cljs","^7",29,"^8",1,"^9",29,"^:",10,"^5",["^ ","^6","posh/reagent.cljs","^7",29,"^8",6,"^9",29,"^:",10],"^3L","^3>"]],"^10",["^ ","^F","^F","^T","^T","^S","^S","~$r","^S","^Y","^F"],"~:cljs.analyzer/constants",["^ ","^Z",["^H",["~:q","~:schema","~:posh-listener","~:db-id","~:reload-fn","~:else","~:forever","~:db","~:transact!","~:posh-dispenser","~:posh","~:filter","~:cache","~:posh-schema-listener","~:with","~:ratoms","~:changed","~:entid","~:db/id","~:posh-atom","~:on-dispose","~:pull","~:listeners","~:reactions","~:in","~:results"]],"~:order",["^5=","^52","^5@","~:q","^56","^59","^5<","^53","^5>","^4Z","^54","^58","^4X","^4Y","^5:","^5;","^5D","^5B","^5A","^55","^57","^5?","^51","^4[","^5C","^50"]],"^17",["^ ","^10",["^H",[]],"^[",["^H",[]]],"^18",["^ "],"^19",["^U","^T","^O","^Q","^V","^R","^W","^S","^F"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1G",[["^5H","~:static-fns"],true,["^5H","~:elide-asserts"],false,["^5H","~:optimize-constants"],null,["^5H","^1>"],null,["^5H","~:external-config"],null,["^5H","~:tooling-config"],null,["^5H","~:emit-constants"],null,["^5H","~:load-tests"],null,["^5H","~:infer-externs"],true,["^5H","^1@"],null,["~:js-options","~:js-provider"],"^[",["~:mode"],"~:dev",["^5H","~:fn-invoke-direct"],null,["^5H","~:source-map"],"/dev/null"]]]