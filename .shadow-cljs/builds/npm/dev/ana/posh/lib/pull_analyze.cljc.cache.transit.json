["^ ","~:output",["^ ","~:js","goog.provide('posh.lib.pull_analyze');\ngoog.require('cljs.core');\ngoog.require('posh.lib.util');\ngoog.require('posh.lib.datom_matcher');\nposh.lib.pull_analyze.reverse_lookup_QMARK_ = (function posh$lib$pull_analyze$reverse_lookup_QMARK_(attr){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(cljs.core.name(attr)),\"_\");\n});\nposh.lib.pull_analyze.reverse_lookup = (function posh$lib$pull_analyze$reverse_lookup(attr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(cljs.core.name(attr)),\"_\")){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([cljs.core.namespace(attr),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.rest(cljs.core.name(attr))))].join(''));\n} else {\nreturn null;\n}\n});\nposh.lib.pull_analyze.dbid_into_vec = (function posh$lib$pull_analyze$dbid_into_vec(v){\nif(cljs.core.not(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),null,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),null], null), null),v))){\nreturn cljs.core.cons(new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),v);\n} else {\nreturn v;\n}\n});\nposh.lib.pull_analyze.insert_dbid = (function posh$lib$pull_analyze$insert_dbid(pull_pattern){\nif(cljs.core.map_QMARK_(pull_pattern)){\nreturn cljs.core.zipmap(cljs.core.keys(pull_pattern),cljs.core.map.cljs$core$IFn$_invoke$arity$2(posh.lib.pull_analyze.insert_dbid,cljs.core.vals(pull_pattern)));\n} else {\nif(cljs.core.vector_QMARK_(pull_pattern)){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__36718_SHARP_){\nif(cljs.core.coll_QMARK_(p1__36718_SHARP_)){\nreturn (posh.lib.pull_analyze.insert_dbid.cljs$core$IFn$_invoke$arity$1 ? posh.lib.pull_analyze.insert_dbid.cljs$core$IFn$_invoke$arity$1(p1__36718_SHARP_) : posh.lib.pull_analyze.insert_dbid.call(null,p1__36718_SHARP_));\n} else {\nreturn p1__36718_SHARP_;\n}\n}),posh.lib.pull_analyze.dbid_into_vec(pull_pattern)));\n} else {\nreturn pull_pattern;\n\n}\n}\n});\nposh.lib.pull_analyze.pull_affected_datoms = (function posh$lib$pull_analyze$pull_affected_datoms(pull_fn,db,pull_pattern,eid){\nvar G__36727 = db;\nvar G__36728 = posh.lib.pull_analyze.insert_dbid(pull_pattern);\nvar G__36729 = eid;\nreturn (pull_fn.cljs$core$IFn$_invoke$arity$3 ? pull_fn.cljs$core$IFn$_invoke$arity$3(G__36727,G__36728,G__36729) : pull_fn.call(null,G__36727,G__36728,G__36729));\n});\nposh.lib.pull_analyze.pull_ref_one_QMARK_ = (function posh$lib$pull_analyze$pull_ref_one_QMARK_(v){\nvar and__4120__auto__ = cljs.core.map_QMARK_(v);\nif(and__4120__auto__){\nreturn new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(v);\n} else {\nreturn and__4120__auto__;\n}\n});\nposh.lib.pull_analyze.pull_ref_many_QMARK_ = (function posh$lib$pull_analyze$pull_ref_many_QMARK_(v){\nvar and__4120__auto__ = cljs.core.vector_QMARK_(v);\nif(and__4120__auto__){\nreturn posh.lib.pull_analyze.pull_ref_one_QMARK_(cljs.core.first(v));\n} else {\nreturn and__4120__auto__;\n}\n});\nposh.lib.pull_analyze.ref_QMARK_ = (function posh$lib$pull_analyze$ref_QMARK_(schema,attr){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(schema,attr),new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944)),new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079));\n});\nposh.lib.pull_analyze.cardinality_one_QMARK_ = (function posh$lib$pull_analyze$cardinality_one_QMARK_(schema,attr){\nvar temp__5735__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(schema,attr);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar e = temp__5735__auto__;\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659).cljs$core$IFn$_invoke$arity$1(e),new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234))));\n} else {\nreturn null;\n}\n});\nposh.lib.pull_analyze.cardinality_many_QMARK_ = (function posh$lib$pull_analyze$cardinality_many_QMARK_(schema,attr){\nvar temp__5735__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(schema,attr);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar e = temp__5735__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659).cljs$core$IFn$_invoke$arity$1(e),new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234));\n} else {\nreturn null;\n}\n});\nposh.lib.pull_analyze.tx_datoms_for_pull_map = (function posh$lib$pull_analyze$tx_datoms_for_pull_map(schema,entity_id,pull_map){\nif(cljs.core.empty_QMARK_(pull_map)){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nvar vec__36762 = cljs.core.first(pull_map);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36762,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36762,(1),null);\nvar r_QMARK_ = posh.lib.pull_analyze.reverse_lookup_QMARK_(k);\nvar k__$1 = ((r_QMARK_)?posh.lib.pull_analyze.reverse_lookup(k):k);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098))){\nvar G__36765 = schema;\nvar G__36766 = entity_id;\nvar G__36767 = cljs.core.rest(pull_map);\nreturn (posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3(G__36765,G__36766,G__36767) : posh.lib.pull_analyze.tx_datoms_for_pull_map.call(null,G__36765,G__36766,G__36767));\n} else {\nif(posh.lib.pull_analyze.ref_QMARK_(schema,k__$1)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_((function (){var and__4120__auto__ = (!(r_QMARK_));\nif(and__4120__auto__){\nreturn posh.lib.pull_analyze.cardinality_one_QMARK_(schema,k__$1);\n} else {\nreturn and__4120__auto__;\n}\n})())?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_id,k__$1,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(v)], null)], null),(function (){var G__36770 = schema;\nvar G__36771 = new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(v);\nvar G__36772 = v;\nreturn (posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3(G__36770,G__36771,G__36772) : posh.lib.pull_analyze.tx_datoms_for_pull_map.call(null,G__36770,G__36771,G__36772));\n})()):(cljs.core.truth_((function (){var or__4131__auto__ = r_QMARK_;\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn posh.lib.pull_analyze.cardinality_many_QMARK_(schema,k__$1);\n}\n})())?cljs.core.concat.cljs$core$IFn$_invoke$arity$2((((!(r_QMARK_)))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__36762,k,v,r_QMARK_,k__$1){\nreturn (function (p1__36756_SHARP_){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_id,k__$1,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(p1__36756_SHARP_)], null)],null));\n});})(vec__36762,k,v,r_QMARK_,k__$1))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)):null),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__36762,k,v,r_QMARK_,k__$1){\nreturn (function (p1__36757_SHARP_){\nvar G__36776 = schema;\nvar G__36777 = new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(p1__36757_SHARP_);\nvar G__36778 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((r_QMARK_)?cljs.core.PersistentArrayMap.createAsIfByAssoc([k__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),entity_id], null)]):null),p1__36757_SHARP_], 0));\nreturn (posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3(G__36776,G__36777,G__36778) : posh.lib.pull_analyze.tx_datoms_for_pull_map.call(null,G__36776,G__36777,G__36778));\n});})(vec__36762,k,v,r_QMARK_,k__$1))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0))):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_id,k__$1,v], null)], null)\n)),(function (){var G__36779 = schema;\nvar G__36780 = entity_id;\nvar G__36781 = cljs.core.rest(pull_map);\nreturn (posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3(G__36779,G__36780,G__36781) : posh.lib.pull_analyze.tx_datoms_for_pull_map.call(null,G__36779,G__36780,G__36781));\n})());\n} else {\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_(posh.lib.pull_analyze.cardinality_many_QMARK_(schema,k__$1))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__36762,k,v,r_QMARK_,k__$1){\nreturn (function (p1__36758_SHARP_){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_id,k__$1,p1__36758_SHARP_], null)],null));\n});})(vec__36762,k,v,r_QMARK_,k__$1))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_id,k__$1,v], null)], null)),(function (){var G__36782 = schema;\nvar G__36783 = entity_id;\nvar G__36784 = cljs.core.rest(pull_map);\nreturn (posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_datoms_for_pull_map.cljs$core$IFn$_invoke$arity$3(G__36782,G__36783,G__36784) : posh.lib.pull_analyze.tx_datoms_for_pull_map.call(null,G__36782,G__36783,G__36784));\n})());\n\n}\n}\n}\n});\nposh.lib.pull_analyze.generate_affected_tx_datoms_for_pull = (function posh$lib$pull_analyze$generate_affected_tx_datoms_for_pull(schema,affected_pull){\nreturn posh.lib.pull_analyze.tx_datoms_for_pull_map(schema,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(affected_pull),affected_pull);\n});\nposh.lib.pull_analyze.limit_spec_QMARK_ = (function posh$lib$pull_analyze$limit_spec_QMARK_(x){\nvar and__4120__auto__ = cljs.core.seq_QMARK_(x);\nif(and__4120__auto__){\nvar G__36788 = cljs.core.first(x);\nvar fexpr__36787 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"limit\",\"limit\",284709164,null),null,\"limit\",null], null), null);\nreturn (fexpr__36787.cljs$core$IFn$_invoke$arity$1 ? fexpr__36787.cljs$core$IFn$_invoke$arity$1(G__36788) : fexpr__36787.call(null,G__36788));\n} else {\nreturn and__4120__auto__;\n}\n});\nposh.lib.pull_analyze.limit_attr = (function posh$lib$pull_analyze$limit_attr(limit_spec){\nreturn cljs.core.second(limit_spec);\n});\nposh.lib.pull_analyze.remove_limits = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure.walk.postwalk,(function (x){\nif(cljs.core.truth_(posh.lib.pull_analyze.limit_spec_QMARK_(x))){\nreturn posh.lib.pull_analyze.limit_attr(x);\n} else {\nreturn x;\n}\n}));\nposh.lib.pull_analyze.recursive_val_QMARK_ = (function posh$lib$pull_analyze$recursive_val_QMARK_(v){\nreturn ((typeof v === 'number') || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null))));\n});\nposh.lib.pull_analyze.tx_pattern_for_pull = (function posh$lib$pull_analyze$tx_pattern_for_pull(schema,pull_pattern,affected_pull,refs_only_QMARK_){\nvar entity_keys = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__36796_SHARP_){\nreturn ((cljs.core.map_QMARK_(p1__36796_SHARP_)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),p1__36796_SHARP_)));\n}),pull_pattern);\nvar val_keys = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (entity_keys){\nreturn (function (p1__36797_SHARP_){\nreturn ((posh.lib.pull_analyze.reverse_lookup_QMARK_(p1__36797_SHARP_)) || (posh.lib.pull_analyze.ref_QMARK_(schema,p1__36797_SHARP_)));\n});})(entity_keys))\n,entity_keys);\nvar ref_keys = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (entity_keys,val_keys){\nreturn (function (k){\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([k,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098)], null)]);\n});})(entity_keys,val_keys))\n,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(val_keys),entity_keys));\nvar starred_QMARK_ = cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),null], null), null),val_keys);\nvar pull_maps = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(ref_keys,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.map_QMARK_,pull_pattern)));\nif(cljs.core.truth_(new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(affected_pull))){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(((cljs.core.not((function (){var or__4131__auto__ = refs_only_QMARK_;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.empty_QMARK_(val_keys);\n}\n})()))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(affected_pull),(cljs.core.truth_(starred_QMARK_)?new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null):cljs.core.set(val_keys)),new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null)], null):null),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps){\nreturn (function (p__36820){\nvar vec__36821 = p__36820;\nvar ref_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36821,(0),null);\nvar ref_pull = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36821,(1),null);\nvar r_QMARK_ = posh.lib.pull_analyze.reverse_lookup_QMARK_(ref_key);\nvar unrev_key = ((r_QMARK_)?posh.lib.pull_analyze.reverse_lookup(ref_key):ref_key);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(((r_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),unrev_key,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(affected_pull)], null)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(affected_pull),ref_key,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null)], null)),((posh.lib.pull_analyze.recursive_val_QMARK_(ref_pull))?(cljs.core.truth_((ref_key.cljs$core$IFn$_invoke$arity$1 ? ref_key.cljs$core$IFn$_invoke$arity$1(affected_pull) : ref_key.call(null,affected_pull)))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (r_QMARK_,unrev_key,vec__36821,ref_key,ref_pull,entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps){\nreturn (function (p1__36801_SHARP_){\nreturn (posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$4 ? posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$4(schema,pull_pattern,p1__36801_SHARP_,refs_only_QMARK_) : posh.lib.pull_analyze.tx_pattern_for_pull.call(null,schema,pull_pattern,p1__36801_SHARP_,refs_only_QMARK_));\n});})(r_QMARK_,unrev_key,vec__36821,ref_key,ref_pull,entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(ref_key.cljs$core$IFn$_invoke$arity$1 ? ref_key.cljs$core$IFn$_invoke$arity$1(affected_pull) : ref_key.call(null,affected_pull))], 0)):null):(cljs.core.truth_((function (){var or__4131__auto__ = r_QMARK_;\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn posh.lib.pull_analyze.cardinality_many_QMARK_(schema,unrev_key);\n}\n})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (r_QMARK_,unrev_key,vec__36821,ref_key,ref_pull,entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps){\nreturn (function (p1__36802_SHARP_){\nreturn (posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$4 ? posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$4(schema,ref_pull,p1__36802_SHARP_,refs_only_QMARK_) : posh.lib.pull_analyze.tx_pattern_for_pull.call(null,schema,ref_pull,p1__36802_SHARP_,refs_only_QMARK_));\n});})(r_QMARK_,unrev_key,vec__36821,ref_key,ref_pull,entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(ref_key.cljs$core$IFn$_invoke$arity$1 ? ref_key.cljs$core$IFn$_invoke$arity$1(affected_pull) : ref_key.call(null,affected_pull))], 0)):(function (){var G__36828 = schema;\nvar G__36829 = ref_pull;\nvar G__36830 = (ref_key.cljs$core$IFn$_invoke$arity$2 ? ref_key.cljs$core$IFn$_invoke$arity$2(affected_pull,refs_only_QMARK_) : ref_key.call(null,affected_pull,refs_only_QMARK_));\nreturn (posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$3 ? posh.lib.pull_analyze.tx_pattern_for_pull.cljs$core$IFn$_invoke$arity$3(G__36828,G__36829,G__36830) : posh.lib.pull_analyze.tx_pattern_for_pull.call(null,G__36828,G__36829,G__36830));\n})()\n)));\n});})(entity_keys,val_keys,ref_keys,starred_QMARK_,pull_maps))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([pull_maps], 0)));\n} else {\nreturn null;\n}\n});\nposh.lib.pull_analyze.pull_analyze = (function posh$lib$pull_analyze$pull_analyze(dcfg,retrieve,p__36838,pull_pattern,ent_id){\nvar map__36839 = p__36838;\nvar map__36839__$1 = (((((!((map__36839 == null))))?(((((map__36839.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__36839.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36839):map__36839);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36839__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar db_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36839__$1,new cljs.core.Keyword(null,\"db-id\",\"db-id\",747248515));\nvar schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36839__$1,new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791));\nif(cljs.core.truth_((function (){var and__4120__auto__ = ent_id;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn cljs.core.seq(retrieve);\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar affected_datoms = posh.lib.pull_analyze.pull_affected_datoms(new cljs.core.Keyword(null,\"pull\",\"pull\",-860544805).cljs$core$IFn$_invoke$arity$1(dcfg),db,pull_pattern,(function (){var fexpr__36842 = new cljs.core.Keyword(null,\"entid\",\"entid\",1720688982).cljs$core$IFn$_invoke$arity$1(dcfg);\nreturn (fexpr__36842.cljs$core$IFn$_invoke$arity$2 ? fexpr__36842.cljs$core$IFn$_invoke$arity$2(db,ent_id) : fexpr__36842.call(null,db,ent_id));\n})());\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"results\",\"results\",-1134170113),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"results\",\"results\",-1134170113),affected_datoms], null):null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),null,new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),null], null), null),retrieve))?(function (){var datoms = posh.lib.pull_analyze.generate_affected_tx_datoms_for_pull(schema,affected_datoms);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,datoms])], null):null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,posh.lib.util.t_for_datoms(new cljs.core.Keyword(null,\"q\",\"q\",689001697).cljs$core$IFn$_invoke$arity$1(dcfg),db,datoms)])], null):null)], 0));\n})():null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ref-patterns\",\"ref-patterns\",77228294),null,new cljs.core.Keyword(null,\"patterns\",\"patterns\",1164082024),null], null), null),retrieve))?(function (){var prepped_pull_pattern = posh.lib.pull_analyze.insert_dbid((posh.lib.pull_analyze.remove_limits.cljs$core$IFn$_invoke$arity$1 ? posh.lib.pull_analyze.remove_limits.cljs$core$IFn$_invoke$arity$1(pull_pattern) : posh.lib.pull_analyze.remove_limits.call(null,pull_pattern)));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"patterns\",\"patterns\",1164082024),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"patterns\",\"patterns\",1164082024),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,posh.lib.datom_matcher.reduce_patterns(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(((cljs.core.vector_QMARK_(ent_id))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),cljs.core.first(ent_id),cljs.core.second(ent_id)], null)], null):null),posh.lib.pull_analyze.tx_pattern_for_pull(schema,prepped_pull_pattern,affected_datoms,false)))])], null):null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref-patterns\",\"ref-patterns\",77228294),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref-patterns\",\"ref-patterns\",77228294),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,posh.lib.datom_matcher.reduce_patterns(posh.lib.pull_analyze.tx_pattern_for_pull(schema,prepped_pull_pattern,affected_datoms,true))])], null):null)], 0));\n})():null)], 0));\n} else {\nreturn null;\n}\n});\nposh.lib.pull_analyze.pull_many_analyze = (function posh$lib$pull_analyze$pull_many_analyze(dcfg,retrieve,p__36852,pull_pattern,ent_ids){\nvar map__36853 = p__36852;\nvar map__36853__$1 = (((((!((map__36853 == null))))?(((((map__36853.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__36853.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36853):map__36853);\nvar db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36853__$1,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36853__$1,new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791));\nvar db_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36853__$1,new cljs.core.Keyword(null,\"db-id\",\"db-id\",747248515));\nif(cljs.core.empty_QMARK_(retrieve)){\nreturn null;\n} else {\nvar resolved_ent_ids = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__36853,map__36853__$1,db,schema,db_id){\nreturn (function (p1__36843_SHARP_){\nvar fexpr__36861 = new cljs.core.Keyword(null,\"entid\",\"entid\",1720688982).cljs$core$IFn$_invoke$arity$1(dcfg);\nreturn (fexpr__36861.cljs$core$IFn$_invoke$arity$2 ? fexpr__36861.cljs$core$IFn$_invoke$arity$2(db,p1__36843_SHARP_) : fexpr__36861.call(null,db,p1__36843_SHARP_));\n});})(map__36853,map__36853__$1,db,schema,db_id))\n,ent_ids);\nvar affected_datoms = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (resolved_ent_ids,map__36853,map__36853__$1,db,schema,db_id){\nreturn (function (ent_id){\nreturn posh.lib.pull_analyze.pull_affected_datoms(new cljs.core.Keyword(null,\"pull\",\"pull\",-860544805).cljs$core$IFn$_invoke$arity$1(dcfg),db,pull_pattern,ent_id);\n});})(resolved_ent_ids,map__36853,map__36853__$1,db,schema,db_id))\n,resolved_ent_ids);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"results\",\"results\",-1134170113),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"results\",\"results\",-1134170113),affected_datoms], null):null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),null,new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),null], null), null),retrieve))?(function (){var datoms = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (resolved_ent_ids,affected_datoms,map__36853,map__36853__$1,db,schema,db_id){\nreturn (function (p1__36844_SHARP_){\nreturn posh.lib.pull_analyze.generate_affected_tx_datoms_for_pull(schema,p1__36844_SHARP_);\n});})(resolved_ent_ids,affected_datoms,map__36853,map__36853__$1,db,schema,db_id))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([affected_datoms], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,datoms])], null):null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"datoms-t\",\"datoms-t\",1641690868),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,posh.lib.util.t_for_datoms(new cljs.core.Keyword(null,\"q\",\"q\",689001697).cljs$core$IFn$_invoke$arity$1(dcfg),db,datoms)])], null):null)], 0));\n})():null),(cljs.core.truth_(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"patterns\",\"patterns\",1164082024),null], null), null),retrieve))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"patterns\",\"patterns\",1164082024),cljs.core.PersistentArrayMap.createAsIfByAssoc([db_id,(function (){var patterns = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (resolved_ent_ids,affected_datoms,map__36853,map__36853__$1,db,schema,db_id){\nreturn (function (p1__36846_SHARP_){\nreturn posh.lib.pull_analyze.tx_pattern_for_pull(schema,posh.lib.pull_analyze.insert_dbid((posh.lib.pull_analyze.remove_limits.cljs$core$IFn$_invoke$arity$1 ? posh.lib.pull_analyze.remove_limits.cljs$core$IFn$_invoke$arity$1(pull_pattern) : posh.lib.pull_analyze.remove_limits.call(null,pull_pattern))),p1__36846_SHARP_,false);\n});})(resolved_ent_ids,affected_datoms,map__36853,map__36853__$1,db,schema,db_id))\n,affected_datoms);\ncljs.core.cons(cljs.core.vec(cljs.core.cons(cljs.core.set(resolved_ent_ids),cljs.core.rest(cljs.core.ffirst(patterns)))),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.rest,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([patterns], 0)));\n\nreturn posh.lib.datom_matcher.reduce_patterns(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,patterns));\n})()])], null):null)], 0));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","posh/lib/pull_analyze.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react","~$create-react-class","~$shadow.js.shim.module$create_react_class","~$react-dom","~$shadow.js.shim.module$react_dom"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$posh.lib.pull-analyze","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$posh.lib.util","^M","~$util","^M","~$posh.lib.datom-matcher","^O","~$dm","^O","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Q","^Q"],"~:form",["~#list",["~$ns","^H",["^X",["^T",["^M","~:as","^N"],["^O","^Z","^P"]]]]],"~:flags",["^ ","^T",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^M","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","posh/lib/pull_analyze.cljc"],"~:compiled-at",1562950763125,"~:resource-name","posh/lib/pull_analyze.cljc","~:warnings",[],"~:source","(ns posh.lib.pull-analyze\n  (:require [posh.lib.util :as util]\n            [posh.lib.datom-matcher :as dm]))\n\n(defn reverse-lookup? [attr]\n  (= (first (name attr)) '\\_))\n\n(defn reverse-lookup [attr]\n  (when (= (first (name attr)) '\\_)\n    (keyword (str (namespace attr) \"/\" (reduce str (rest (name attr)))))))\n\n(defn dbid-into-vec [v]\n  (if (not (some #{'* :db/id} v))\n    (cons :db/id v)\n    v))\n\n(defn insert-dbid [pull-pattern]\n  (cond\n   (map? pull-pattern) (zipmap (keys pull-pattern)\n                               (map insert-dbid (vals pull-pattern)))\n\n   (vector? pull-pattern)\n   (->> (dbid-into-vec pull-pattern)\n        (map #(if (coll? %) (insert-dbid %) %))\n        vec)\n\n   :else pull-pattern))\n\n(defn pull-affected-datoms [pull-fn db pull-pattern eid]\n  (pull-fn db (insert-dbid pull-pattern) eid))\n\n(defn pull-ref-one? [v]\n  (and (map? v) (:db/id v)))\n\n(defn pull-ref-many? [v]\n  (and (vector? v) (pull-ref-one? (first v))))\n\n(defn ref? [schema attr]\n  (= (get (get schema attr) :db/valueType)\n     :db.type/ref))\n\n(defn cardinality-one? [schema attr]\n  (when-let [e (get schema attr)]\n    (not (= (:db/cardinality e) :db.cardinality/many))))\n\n(defn cardinality-many? [schema attr]\n  (when-let [e (get schema attr)]\n    (= (:db/cardinality e) :db.cardinality/many)))\n\n(defn tx-datoms-for-pull-map [schema entity-id pull-map]\n  (if (empty? pull-map)\n    []\n    (let [[k v] (first pull-map)\n          r?    (reverse-lookup? k)\n          k     (if r? (reverse-lookup k) k)]\n      (cond\n       (= k :db/id)\n       (tx-datoms-for-pull-map schema entity-id (rest pull-map))\n\n       (ref? schema k)\n       (concat\n        (cond\n         (and (not r?) (cardinality-one? schema k))\n         (concat\n          [[entity-id k (:db/id v)]]\n          (tx-datoms-for-pull-map schema (:db/id v) v))\n\n         (or r? (cardinality-many? schema k))\n         (concat\n          (when (not r?)\n            (mapcat #(vector [entity-id k (:db/id %)]) v))\n          (mapcat #(tx-datoms-for-pull-map\n                    schema\n                    (:db/id %)\n                    (merge (when r? {k {:db/id entity-id}}) %))\n                  v))\n\n         :else [[entity-id k v]])\n        (tx-datoms-for-pull-map schema entity-id (rest pull-map)))\n\n       :else\n       (concat\n        (if (cardinality-many? schema k)\n          (mapcat #(vector [entity-id k %]) v)\n          [[entity-id k v]])\n        (tx-datoms-for-pull-map schema entity-id (rest pull-map)))))))\n\n(defn generate-affected-tx-datoms-for-pull [schema affected-pull]\n  (tx-datoms-for-pull-map schema (:db/id affected-pull) affected-pull))\n\n\n;;;;; pull pattern generator ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(comment\n  ;; perhaps will use later to reduce the pull pattern verbosity\n  (defn count-avs [patterns]\n    (if (empty? patterns)\n      {}\n      (merge-with + {(let [[e a v] (first patterns)] [a v]) 1}\n                  (count-avs (rest patterns)))))\n\n  (defn count-eas [patterns]\n    (if (empty? patterns)\n      {}\n      (merge-with + {(let [[e a] (first patterns)] [e a]) 1}\n                  (count-eas (rest patterns)))))\n\n  (defn reducible-patterns [pattern-counts]\n    (remove nil? (map (fn [[k v]] (when (> v 1) v) k) pattern-counts)))\n\n  (defn combine-ents [patterns])\n\n  (defn combine-patterns [patterns]\n    (let [avs (reducible-patterns (count-avs patterns))\n          eas (reducible-patterns (count-eas patterns))])))\n\n\n(defn limit-spec? [x]\n  (and (seq? x) (#{'limit \"limit\"} (first x))))\n\n(defn limit-attr [limit-spec]\n  (second limit-spec))\n\n(def remove-limits\n  (partial\n   clojure.walk/postwalk (fn [x] (if (limit-spec? x) (limit-attr x) x))))\n\n(defn recursive-val? [v]\n  (or (number? v) (= v '...)))\n\n(defn tx-pattern-for-pull [schema pull-pattern affected-pull refs-only?]\n  (let [entity-keys (remove #(or (map? %) (= :db/id %)) pull-pattern)\n        val-keys    (remove #(or (reverse-lookup? %) (ref? schema %)) entity-keys)\n        ref-keys    (->> entity-keys\n                         (remove (set val-keys))\n                         (map (fn [k] {k [:db/id]})))\n        starred?    (some #{'*} val-keys)\n        pull-maps   (reduce merge (concat ref-keys (filter map? pull-pattern)))]\n    (when (:db/id affected-pull)\n      (concat\n       (when (not (or refs-only? (empty? val-keys)))\n         [[(:db/id affected-pull) (if starred? '_ (set val-keys)) '_]])\n       (mapcat (fn [[ref-key ref-pull]]\n                 (let [r? (reverse-lookup? ref-key)\n                       unrev-key (if r? (reverse-lookup ref-key) ref-key)]\n                   (concat\n                    (if r?\n                      [['_ unrev-key (:db/id affected-pull)]]\n                      [[(:db/id affected-pull) ref-key '_]])\n                    (cond\n                     (recursive-val? ref-pull)\n                     (when (ref-key affected-pull)\n                       (mapcat #(tx-pattern-for-pull schema pull-pattern % refs-only?)\n                               (ref-key affected-pull)))\n\n                     (or r? (cardinality-many? schema unrev-key))\n                     (mapcat #(tx-pattern-for-pull schema ref-pull % refs-only?)\n                             (ref-key affected-pull))\n                     :else\n                     (tx-pattern-for-pull schema ref-pull (ref-key affected-pull refs-only?))))))\n               pull-maps)))))\n\n\n;; retrieve :datoms, :patterns, or :results\n;; db should be {:db db :schema schema :db-id db-id}\n(defn pull-analyze [dcfg retrieve {:keys [db db-id schema]} pull-pattern ent-id]\n  (when (and ent-id (seq retrieve))\n    (let [affected-datoms\n          (pull-affected-datoms (:pull dcfg) db pull-pattern ((:entid dcfg) db ent-id))]\n      (merge\n       (when (some #{:results} retrieve)\n         {:results affected-datoms})\n       (when (some #{:datoms :datoms-t} retrieve)\n         (let [datoms (generate-affected-tx-datoms-for-pull schema affected-datoms)]\n           (merge\n            (when (some #{:datoms} retrieve)\n              {:datoms {db-id datoms}})\n            (when (some #{:datoms-t} retrieve)\n              {:datoms-t {db-id (util/t-for-datoms (:q dcfg) db datoms)}}))))\n       (when (some #{:patterns :ref-patterns} retrieve)\n         (let [prepped-pull-pattern (insert-dbid (remove-limits pull-pattern))]\n           (merge\n            (when (some #{:patterns} retrieve)\n              {:patterns\n               {db-id\n                (dm/reduce-patterns\n                  (concat\n                    (when (vector? ent-id)\n                      [['_ (first ent-id) (second ent-id)]])\n                    (tx-pattern-for-pull\n                     schema\n                     prepped-pull-pattern\n                     affected-datoms\n                     false)))}})\n            (when (some #{:ref-patterns} retrieve)\n              {:ref-patterns\n               {db-id\n                (dm/reduce-patterns\n                 (tx-pattern-for-pull\n                  schema\n                  prepped-pull-pattern\n                  affected-datoms\n                  true))}}))))))))\n \n(defn pull-many-analyze [dcfg retrieve {:keys [db schema db-id]} pull-pattern ent-ids]\n  (when-not (empty? retrieve)\n    (let [resolved-ent-ids (map #((:entid dcfg) db %) ent-ids)\n          affected-datoms\n          (map (fn [ent-id] (pull-affected-datoms (:pull dcfg) db pull-pattern ent-id))\n               resolved-ent-ids)]\n      (merge\n       (when (some #{:results} retrieve)\n         {:results affected-datoms})\n       (when (some #{:datoms :datoms-t} retrieve)\n         (let [datoms (mapcat #(generate-affected-tx-datoms-for-pull schema %)\n                           affected-datoms)]\n           (merge\n            (when (some #{:datoms} retrieve)\n              {:datoms {db-id datoms}})\n            (when (some #{:datoms-t} retrieve)\n              {:datoms-t {db-id (util/t-for-datoms (:q dcfg) db datoms)}}))))\n       (when (some #{:patterns} retrieve)\n         {:patterns\n          {db-id\n           (let [patterns\n                 (map\n                  #(tx-pattern-for-pull\n                    schema\n                    (insert-dbid (remove-limits pull-pattern)) %\n                    false)\n                  affected-datoms)]\n             (cons\n              (vec (cons (set resolved-ent-ids) (rest (ffirst patterns))))\n              (mapcat rest patterns))\n             (dm/reduce-patterns (apply concat patterns)))}})))))\n\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["posh.lib.pull-analyze/reverse-lookup?","attr","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/first","cljs.core/name","posh.lib.pull-analyze/reverse-lookup","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","cljs.core/namespace","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","cljs.core/str","cljs.core/rest","posh.lib.pull-analyze/dbid-into-vec","v","cljs.core/not","cljs.core/some","cljs.core/cons","posh.lib.pull-analyze/insert-dbid","pull-pattern","cljs.core/map?","cljs.core/zipmap","cljs.core/keys","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/vals","cljs.core/vector?","p1__36718#","cljs.core/coll?","cljs.core/vec","posh.lib.pull-analyze/pull-affected-datoms","pull-fn","db","eid","G__36727","G__36728","G__36729","posh.lib.pull-analyze/pull-ref-one?","and__4120__auto__","posh.lib.pull-analyze/pull-ref-many?","posh.lib.pull-analyze/ref?","schema","cljs.core.get.cljs$core$IFn$_invoke$arity$2","posh.lib.pull-analyze/cardinality-one?","temp__5735__auto__","e","posh.lib.pull-analyze/cardinality-many?","posh.lib.pull-analyze/tx-datoms-for-pull-map","entity-id","pull-map","cljs.core/empty?","vec__36762","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","r?","G__36765","G__36766","G__36767","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","G__36770","G__36771","G__36772","or__4131__auto__","p1__36756#","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","cljs.core/PersistentVector","p1__36757#","G__36776","G__36777","G__36778","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__36779","G__36780","G__36781","p1__36758#","G__36782","G__36783","G__36784","posh.lib.pull-analyze/generate-affected-tx-datoms-for-pull","affected-pull","posh.lib.pull-analyze/limit-spec?","x","cljs.core/seq?","G__36788","fexpr__36787","posh.lib.pull-analyze/limit-attr","limit-spec","cljs.core/second","posh.lib.pull-analyze/remove-limits","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","clojure.walk/postwalk","posh.lib.pull-analyze/recursive-val?","posh.lib.pull-analyze/tx-pattern-for-pull","refs-only?","entity-keys","p1__36796#","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","val-keys","p1__36797#","ref-keys","cljs.core/set","starred?","pull-maps","cljs.core/merge","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__36820","vec__36821","ref-key","ref-pull","unrev-key","p1__36801#","p1__36802#","G__36828","G__36829","G__36830","p__36838","map__36839","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","posh.lib.pull-analyze/pull-analyze","dcfg","retrieve","db-id","ent-id","cljs.core/seq","affected-datoms","fexpr__36842","datoms","posh.lib.util/t-for-datoms","prepped-pull-pattern","posh.lib.datom-matcher/reduce-patterns","p__36852","map__36853","posh.lib.pull-analyze/pull-many-analyze","ent-ids","resolved-ent-ids","p1__36843#","fexpr__36861","p1__36844#","patterns","p1__36846#","cljs.core/ffirst","cljs.core/concat"]]],"~:cache-keys",["~#cmap",[["~:macro","^Q"],[1562948133000],["^13","goog/math/math.js"],[1562948135000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^R","~$goog.array","~$goog.asserts"]]],["^13","goog/array/array.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1F"]]],["^13","goog/debug/error.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/dom/nodetype.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/object/object.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],"~:SHADOW-TIMESTAMP",[1562948138000,1562948133000],["^13","goog/math/long.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1F","~$goog.reflect"]]],["^13","goog/string/internal.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/functions/functions.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/structs/map.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^13","posh/lib/datom_matcher.cljc"],[1562948137000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^Q","~$clojure.set"]]],["^13","posh/lib/util.cljc"],[1562948137000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^Q"]]],["^13","goog/asserts/asserts.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^13","goog/uri/uri.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1E","^1F","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^13","goog/base.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",[]]],["^13","goog/structs/structs.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1E","~$goog.object"]]],["^13","goog/string/string.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","~$goog.string.internal"]]],["^13","goog/reflect/reflect.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/string/stringbuffer.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","goog/iter/iter.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1E","^1F","~$goog.functions","~$goog.math"]]],["^13","cljs/core.cljs"],[1562948133000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["~$goog.math.Long","~$goog.math.Integer","^1N","^1T","^1E","~$goog.Uri","~$goog.string.StringBuffer"]]],["^13","goog/math/integer.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R"]]],["^13","posh/lib/pull_analyze.cljc"],[1562948137000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^Q","^M","^O"]]],["^13","clojure/set.cljs"],[1562948133000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^Q"]]],["^13","goog/uri/utils.js"],[1562948135000,"^1A",["^ ","^1B",null,"^1C",["^F",[]],"^1D",["^R","^1E","^1F","^1N"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","^P","^O","^Q","^Q","^R","^R"],"^S",["^F",["^T"]],"^U",null,"~:defs",["^ ","~$tx-pattern-for-pull",["^ ","~:protocol-inline",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",131,"^8",7,"^9",131,"^:",26,"~:arglists",["^X",["~$quote",["^X",[["~$schema","~$pull-pattern","~$affected-pull","~$refs-only?"]]]]]],"^G","~$posh.lib.pull-analyze/tx-pattern-for-pull","^6","posh/lib/pull_analyze.cljc","^:",26,"~:method-params",["^X",[["^26","^27","^28","^29"]]],"~:protocol-impl",null,"~:arglists-meta",["^X",[null,null]],"^8",1,"~:variadic?",false,"^7",131,"~:ret-tag",["^F",["~$cljs.core/LazySeq","~$clj-nil"]],"^9",131,"~:max-fixed-arity",4,"~:fn-var",true,"^24",["^X",["^25",["^X",[["^26","^27","^28","^29"]]]]]],"~$cardinality-one?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",42,"^8",7,"^9",42,"^:",23,"^24",["^X",["^25",["^X",[["^26","~$attr"]]]]]],"^G","~$posh.lib.pull-analyze/cardinality-one?","^6","posh/lib/pull_analyze.cljc","^:",23,"^2;",["^X",[["^26","^2E"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",42,"^2?",["^F",["~$boolean","^2A"]],"^9",42,"^2B",2,"^2C",true,"^24",["^X",["^25",["^X",[["^26","^2E"]]]]]],"~$cardinality-many?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",46,"^8",7,"^9",46,"^:",24,"^24",["^X",["^25",["^X",[["^26","^2E"]]]]]],"^G","~$posh.lib.pull-analyze/cardinality-many?","^6","posh/lib/pull_analyze.cljc","^:",24,"^2;",["^X",[["^26","^2E"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",46,"^2?",["^F",["^2G","^2A"]],"^9",46,"^2B",2,"^2C",true,"^24",["^X",["^25",["^X",[["^26","^2E"]]]]]],"~$pull-affected-datoms",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",29,"^8",7,"^9",29,"^:",27,"^24",["^X",["^25",["^X",[["~$pull-fn","~$db","^27","~$eid"]]]]]],"^G","~$posh.lib.pull-analyze/pull-affected-datoms","^6","posh/lib/pull_analyze.cljc","^:",27,"^2;",["^X",[["^2K","^2L","^27","^2M"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",29,"^2?","~$any","^9",29,"^2B",4,"^2C",true,"^24",["^X",["^25",["^X",[["^2K","^2L","^27","^2M"]]]]]],"~$insert-dbid",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",17,"^8",7,"^9",17,"^:",18,"^24",["^X",["^25",["^X",[["^27"]]]]]],"^G","~$posh.lib.pull-analyze/insert-dbid","^6","posh/lib/pull_analyze.cljc","^:",18,"^2;",["^X",[["^27"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",17,"^2?",["^F",[null,"~$clj","~$cljs.core/IVector","^2O","~$cljs.core/MetaFn","^2A"]],"^9",17,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["^27"]]]]]],"~$limit-spec?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",118,"^8",7,"^9",118,"^:",18,"^24",["^X",["^25",["^X",[["~$x"]]]]]],"^G","~$posh.lib.pull-analyze/limit-spec?","^6","posh/lib/pull_analyze.cljc","^:",18,"^2;",["^X",[["~$x"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",118,"^2?",["^F",["^2G","^2O"]],"^9",118,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["~$x"]]]]]],"~$reverse-lookup?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",5,"^8",7,"^9",5,"^:",22,"^24",["^X",["^25",["^X",[["^2E"]]]]]],"^G","~$posh.lib.pull-analyze/reverse-lookup?","^6","posh/lib/pull_analyze.cljc","^:",22,"^2;",["^X",[["^2E"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",5,"^2?","^2G","^9",5,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["^2E"]]]]]],"~$pull-many-analyze",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",205,"^8",7,"^9",205,"^:",24,"^24",["^X",["^25",["^X",[["~$dcfg","~$retrieve",["^ ","~:keys",["^2L","^26","~$db-id"]],"^27","~$ent-ids"]]]]]],"^G","~$posh.lib.pull-analyze/pull-many-analyze","^6","posh/lib/pull_analyze.cljc","^:",24,"^2;",["^X",[["^2Z","^2[","~$p__36852","^27","^32"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",205,"^2?",["^F",["^2O","^2A"]],"^9",205,"^2B",5,"^2C",true,"^24",["^X",["^25",["^X",[["^2Z","^2[",["^ ","^30",["^2L","^26","^31"]],"^27","^32"]]]]]],"~$dbid-into-vec",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",12,"^8",7,"^9",12,"^:",20,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"^G","~$posh.lib.pull-analyze/dbid-into-vec","^6","posh/lib/pull_analyze.cljc","^:",20,"^2;",["^X",[["~$v"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",12,"^2?",["^F",[null,"^2R"]],"^9",12,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"~$generate-affected-tx-datoms-for-pull",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",88,"^8",7,"^9",88,"^:",43,"^24",["^X",["^25",["^X",[["^26","^28"]]]]]],"^G","~$posh.lib.pull-analyze/generate-affected-tx-datoms-for-pull","^6","posh/lib/pull_analyze.cljc","^:",43,"^2;",["^X",[["^26","^28"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",88,"^2?",["^F",["^2S","^2O","^2@"]],"^9",88,"^2B",2,"^2C",true,"^24",["^X",["^25",["^X",[["^26","^28"]]]]]],"~$remove-limits",["^ ","^G","~$posh.lib.pull-analyze/remove-limits","^6","posh/lib/pull_analyze.cljc","^7",124,"^8",1,"^9",124,"^:",19,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",124,"^8",6,"^9",124,"^:",19],"~:tag","~$function"],"~$pull-analyze",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",166,"^8",7,"^9",166,"^:",19,"^24",["^X",["^25",["^X",[["^2Z","^2[",["^ ","^30",["^2L","^31","^26"]],"^27","~$ent-id"]]]]]],"^G","~$posh.lib.pull-analyze/pull-analyze","^6","posh/lib/pull_analyze.cljc","^:",19,"^2;",["^X",[["^2Z","^2[","~$p__36838","^27","^3>"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",166,"^2?",["^F",["^2O","^2A"]],"^9",166,"^2B",5,"^2C",true,"^24",["^X",["^25",["^X",[["^2Z","^2[",["^ ","^30",["^2L","^31","^26"]],"^27","^3>"]]]]]],"~$reverse-lookup",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",8,"^8",7,"^9",8,"^:",21,"^24",["^X",["^25",["^X",[["^2E"]]]]]],"^G","~$posh.lib.pull-analyze/reverse-lookup","^6","posh/lib/pull_analyze.cljc","^:",21,"^2;",["^X",[["^2E"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",8,"^2?",["^F",["~$cljs.core/Keyword","^2A"]],"^9",8,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["^2E"]]]]]],"~$recursive-val?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",128,"^8",7,"^9",128,"^:",21,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"^G","~$posh.lib.pull-analyze/recursive-val?","^6","posh/lib/pull_analyze.cljc","^:",21,"^2;",["^X",[["~$v"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",128,"^2?","^2G","^9",128,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"~$pull-ref-many?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",35,"^8",7,"^9",35,"^:",21,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"^G","~$posh.lib.pull-analyze/pull-ref-many?","^6","posh/lib/pull_analyze.cljc","^:",21,"^2;",["^X",[["~$v"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",35,"^2?",["^F",["^2G","^2O"]],"^9",35,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"~$limit-attr",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",121,"^8",7,"^9",121,"^:",17,"^24",["^X",["^25",["^X",[["~$limit-spec"]]]]]],"^G","~$posh.lib.pull-analyze/limit-attr","^6","posh/lib/pull_analyze.cljc","^:",17,"^2;",["^X",[["^3I"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",121,"^2?",["^F",["^2O","^2A"]],"^9",121,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["^3I"]]]]]],"~$pull-ref-one?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",32,"^8",7,"^9",32,"^:",20,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"^G","~$posh.lib.pull-analyze/pull-ref-one?","^6","posh/lib/pull_analyze.cljc","^:",20,"^2;",["^X",[["~$v"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",32,"^2?",["^F",["^2G","^2O"]],"^9",32,"^2B",1,"^2C",true,"^24",["^X",["^25",["^X",[["~$v"]]]]]],"~$tx-datoms-for-pull-map",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",50,"^8",7,"^9",50,"^:",29,"^24",["^X",["^25",["^X",[["^26","~$entity-id","~$pull-map"]]]]]],"^G","~$posh.lib.pull-analyze/tx-datoms-for-pull-map","^6","posh/lib/pull_analyze.cljc","^:",29,"^2;",["^X",[["^26","^3N","^3O"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",50,"^2?",["^F",["^2S","^2O","^2@"]],"^9",50,"^2B",3,"^2C",true,"^24",["^X",["^25",["^X",[["^26","^3N","^3O"]]]]]],"~$ref?",["^ ","^23",null,"^5",["^ ","^6","posh/lib/pull_analyze.cljc","^7",38,"^8",7,"^9",38,"^:",11,"^24",["^X",["^25",["^X",[["^26","^2E"]]]]]],"^G","~$posh.lib.pull-analyze/ref?","^6","posh/lib/pull_analyze.cljc","^:",11,"^2;",["^X",[["^26","^2E"]]],"^2<",null,"^2=",["^X",[null,null]],"^8",1,"^2>",false,"^7",38,"^2?","^2G","^9",38,"^2B",2,"^2C",true,"^24",["^X",["^25",["^X",[["^26","^2E"]]]]]]],"^V",["^ ","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^F",["~:q","~:schema","~:db-id","~:ref-patterns","~:else","~:db","~:db/valueType","~:patterns","~$*","~:db.type/ref","~$limit","~$_","~:datoms-t","~:db/cardinality","~:entid","~:db/id","~:db.cardinality/many","~:pull","~$...","~:datoms","~:results"]],"~:order",["~$*","^44","^3W","^3Y","^3[","^42","^45","^40","^47","~$_","^3X","^3U","^3T","^46","^43","^49","^41","^48","~:q","^3V","^3Z"]],"^[",["^ ","^T",["^F",[]]],"^10",["^ "],"^11",["^R","^Q","^M","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1?",[["^4=","~:static-fns"],true,["^4=","~:elide-asserts"],false,["^4=","~:optimize-constants"],null,["^4=","^16"],null,["^4=","~:external-config"],null,["^4=","~:tooling-config"],null,["^4=","~:emit-constants"],null,["^4=","~:load-tests"],null,["^4=","~:infer-externs"],true,["^4=","^18"],null,["~:js-options","~:js-provider"],"^T",["~:mode"],"~:dev",["^4=","~:fn-invoke-direct"],null,["^4=","~:source-map"],"/dev/null"]]]