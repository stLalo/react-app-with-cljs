["^ ","~:output",["^ ","~:js","goog.provide('posh.lib.datom_matcher');\ngoog.require('cljs.core');\ngoog.require('clojure.set');\nposh.lib.datom_matcher.datom_match_pattern_QMARK_ = (function posh$lib$datom_matcher$datom_match_pattern_QMARK_(pattern,datom){\nwhile(true){\nif(cljs.core.empty_QMARK_(pattern)){\nreturn true;\n} else {\nif(cljs.core.truth_((function (){var p = cljs.core.first(pattern);\nvar or__4131__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = (function (){var and__4120__auto__ = cljs.core.set_QMARK_(p);\nif(and__4120__auto__){\nvar G__36620 = cljs.core.first(datom);\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__36620) : p.call(null,G__36620));\n} else {\nreturn and__4120__auto__;\n}\n})();\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p,cljs.core.first(datom));\n}\n}\n})())){\nvar G__36647 = cljs.core.rest(pattern);\nvar G__36648 = cljs.core.rest(datom);\npattern = G__36647;\ndatom = G__36648;\ncontinue;\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nposh.lib.datom_matcher.datom_match_QMARK_ = (function posh$lib$datom_matcher$datom_match_QMARK_(patterns,datom){\nreturn cljs.core.some((function (p1__36622_SHARP_){\nreturn posh.lib.datom_matcher.datom_match_pattern_QMARK_(p1__36622_SHARP_,datom);\n}),patterns);\n});\nposh.lib.datom_matcher.any_datoms_match_QMARK_ = (function posh$lib$datom_matcher$any_datoms_match_QMARK_(patterns,datoms){\nvar G__36626 = patterns;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__36626)){\nreturn null;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,G__36626)){\nreturn null;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null),G__36626)){\nreturn true;\n} else {\nreturn cljs.core.some(((function (G__36626){\nreturn (function (p1__36625_SHARP_){\nreturn posh.lib.datom_matcher.datom_match_QMARK_(patterns,p1__36625_SHARP_);\n});})(G__36626))\n,datoms);\n\n}\n}\n}\n});\nposh.lib.datom_matcher.matching_datoms = (function posh$lib$datom_matcher$matching_datoms(patterns,datoms){\nvar G__36628 = patterns;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,G__36628)){\nreturn datoms;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null),G__36628)){\nreturn datoms;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__36628)){\nreturn null;\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (G__36628){\nreturn (function (p1__36627_SHARP_){\nreturn posh.lib.datom_matcher.datom_match_QMARK_(patterns,p1__36627_SHARP_);\n});})(G__36628))\n,datoms);\n\n}\n}\n}\n});\nposh.lib.datom_matcher.combine_entids = (function posh$lib$datom_matcher$combine_entids(entids,rest_datom,patterns,new_patterns,leftover_patterns){\nwhile(true){\nif(cljs.core.empty_QMARK_(patterns)){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"new-patterns\",\"new-patterns\",404552774),cljs.core.cons(cljs.core.vec(cljs.core.cons(entids,rest_datom)),new_patterns),new cljs.core.Keyword(null,\"leftover-patterns\",\"leftover-patterns\",377032963),leftover_patterns], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rest_datom,cljs.core.rest(cljs.core.first(patterns)))){\nvar G__36649 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(entids,((cljs.core.set_QMARK_(cljs.core.ffirst(patterns)))?cljs.core.ffirst(patterns):cljs.core.set(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.ffirst(patterns)], null))));\nvar G__36650 = rest_datom;\nvar G__36651 = cljs.core.rest(patterns);\nvar G__36652 = new_patterns;\nvar G__36653 = leftover_patterns;\nentids = G__36649;\nrest_datom = G__36650;\npatterns = G__36651;\nnew_patterns = G__36652;\nleftover_patterns = G__36653;\ncontinue;\n} else {\nvar G__36654 = entids;\nvar G__36655 = rest_datom;\nvar G__36656 = cljs.core.rest(patterns);\nvar G__36657 = new_patterns;\nvar G__36658 = cljs.core.cons(cljs.core.first(patterns),leftover_patterns);\nentids = G__36654;\nrest_datom = G__36655;\npatterns = G__36656;\nnew_patterns = G__36657;\nleftover_patterns = G__36658;\ncontinue;\n}\n}\nbreak;\n}\n});\nposh.lib.datom_matcher.reduce_patterns = (function posh$lib$datom_matcher$reduce_patterns(patterns){\nvar new_patterns = cljs.core.PersistentVector.EMPTY;\nvar leftover_patterns = patterns;\nwhile(true){\nif(cljs.core.empty_QMARK_(leftover_patterns)){\nreturn new_patterns;\n} else {\nif((function (){var id = cljs.core.ffirst(leftover_patterns);\nreturn ((cljs.core.set_QMARK_(id)) || (typeof id === 'number'));\n})()){\nvar r = posh.lib.datom_matcher.combine_entids(cljs.core.PersistentHashSet.EMPTY,cljs.core.rest(cljs.core.first(leftover_patterns)),leftover_patterns,new_patterns,cljs.core.PersistentVector.EMPTY);\nvar G__36660 = new cljs.core.Keyword(null,\"new-patterns\",\"new-patterns\",404552774).cljs$core$IFn$_invoke$arity$1(r);\nvar G__36661 = new cljs.core.Keyword(null,\"leftover-patterns\",\"leftover-patterns\",377032963).cljs$core$IFn$_invoke$arity$1(r);\nnew_patterns = G__36660;\nleftover_patterns = G__36661;\ncontinue;\n} else {\nvar G__36662 = cljs.core.cons(cljs.core.first(leftover_patterns),new_patterns);\nvar G__36663 = cljs.core.rest(leftover_patterns);\nnew_patterns = G__36662;\nleftover_patterns = G__36663;\ncontinue;\n}\n}\nbreak;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","posh/lib/datom_matcher.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react","~$create-react-class","~$shadow.js.shim.module$create_react_class","~$react-dom","~$shadow.js.shim.module$react_dom"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$posh.lib.datom-matcher","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.set","^M","~$cs","^M","~$cljs.core","^O","~$goog","^P"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^H",["^V",["^R",["^M","~:as","^N"]]]]],"~:flags",["^ ","^R",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","posh/lib/datom_matcher.cljc"],"~:compiled-at",1562950763062,"~:resource-name","posh/lib/datom_matcher.cljc","~:warnings",[],"~:source","(ns posh.lib.datom-matcher\n  (:require [clojure.set :as cs]))\n\n(defn datom-match-pattern? [pattern datom]\n  (if (empty? pattern)\n    true\n    (when (let [p (first pattern)]\n            (or\n             (= p '_)\n             (and (set? p) (p (first datom)))\n             (= p (first datom))))\n      (recur (rest pattern) (rest datom)))))\n\n(defn datom-match? [patterns datom]\n  (some #(datom-match-pattern? % datom) patterns))\n\n(defn any-datoms-match? [patterns datoms]\n  (case patterns\n    nil nil\n    [] nil\n    [[]] true\n    (some #(datom-match? patterns %) datoms)))\n\n(defn matching-datoms [patterns datoms]\n  (case patterns\n    [] datoms\n    [[]] datoms\n    nil nil\n    (filter #(datom-match? patterns %) datoms)))\n\n(defn combine-entids [entids rest-datom patterns new-patterns leftover-patterns]\n  (if (empty? patterns)\n    {:new-patterns (cons (vec (cons entids rest-datom)) new-patterns)\n     :leftover-patterns leftover-patterns}\n    (if (= rest-datom (rest (first patterns)))\n      (recur (cs/union entids (if (set? (ffirst patterns))\n                                (ffirst patterns)\n                                (set [(ffirst patterns)])))\n             rest-datom\n             (rest patterns)\n             new-patterns\n             leftover-patterns)\n      (recur entids rest-datom (rest patterns) new-patterns\n             (cons (first patterns) leftover-patterns)))))\n\n(defn reduce-patterns [patterns]\n  (loop [new-patterns []\n         leftover-patterns patterns]\n    (if (empty? leftover-patterns)\n      new-patterns\n      (if (let [id (ffirst leftover-patterns)]\n            (or (set? id) (number? id)))\n        (let [r (combine-entids #{} (rest (first leftover-patterns))\n                                leftover-patterns\n                                new-patterns\n                                [])]\n          (recur (:new-patterns r) (:leftover-patterns r)))\n        (recur (cons (first leftover-patterns) new-patterns) (rest leftover-patterns))))))\n\n(comment\n  (datom-match? '[#{123 88 32} :jimmy _] '[123 :jimmy \"hey\"])\n\n  (datom-match-patterns? '[[88 :deandog]\n                           [#{123 88 32} :jimmy _]] '[123 :jimmy \"hey\"])\n\n  (any-datoms-match? '[[88 :deandog]\n                       [#{123 88 32} :jimmy _]]\n                     '[[28882 :major \"billy\"] [123 :jimmy \"hey\"]])\n\n  \n  )\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;AAGA,AAAA,AAAMA,AAAsBC,AAAQC;;AAApC,AACE,AAAI,AAACC,AAAOF;AAAZ;;AAEE,AAAM,AAAMG,AAAE,AAACC,AAAMJ;AAAf,AACE,AAAAK,AACC,AAAA,AAAA,AAACC,AAAEH;AADJ,AAAA,AAAAE;AAAAA;;AAAA,AAAAA,AAEC,AAAAE,AAAK,AAACC,AAAKL;AAAX,AAAA,AAAAI;AAAc,AAAAE,AAAG,AAACL,AAAMH;AAAV,AAAA,AAAAQ,AAAAA,AAACN,AAAAA,AAAAA;;AAAfI;;;AAFD,AAAA,AAAAF;AAAAA;;AAGC,AAACC,AAAEH,AAAE,AAACC,AAAMH;;;;AAJrB,AAKE,AAAO,AAACS,AAAKV;AAAS,AAACU,AAAKT;;;;;AAL9B;;;;;;AAOJ,AAAA,AAAMU,AAAcC,AAASX;AAA7B,AACE,AAAA,AAAAY,AAACC;AAAD,AAAO,AAAAD,AAACd,AAAuBE;AAAOW;;AAExC,AAAA,AAAMG,AAAmBH,AAASI;AAAlC,AACE,AAAAC,AAAML;AAAN,AAAA,AAAA,AAAAN,AAAA,AAAAW;AAAA;;AAAA,AAAA,AAAAX,AAAA,AAAAW;AAAA;;AAAA,AAAA,AAAAX,AAAA,AAAA,AAAAW;AAAA;;AAAA,AAIE,AAAA,AAACH;AAADI;AAAA,AAAO,AAAAA,AAACP,AAAaC;;AAAYI;;;;;;AAErC,AAAA,AAAMG,AAAiBP,AAASI;AAAhC,AACE,AAAAI,AAAMR;AAAN,AAAA,AAAA,AAAAN,AAAA,AAAAc;AACKJ;;AADL,AAAA,AAAAV,AAAA,AAAA,AAAAc;AAEOJ;;AAFP,AAAA,AAAAV,AAAA,AAAAc;AAAA;;AAAA,AAIE,AAAA,AAACE;AAADD;AAAA,AAAS,AAAAA,AAACV,AAAaC;;AAAYI;;;;;;AAEvC,AAAA,AAAMO,AAAgBC,AAAOC,AAAWb,AAASc,AAAaC;;AAA9D,AACE,AAAI,AAACzB,AAAOU;AAAZ,AAAA,AAAA,AACiB,AAACgB,AAAK,AAACC,AAAI,AAACD,AAAKJ,AAAOC,AAAaC,AAChCC;;AACpB,AAAI,AAACrB,AAAEmB,AAAW,AAACf,AAAK,AAACN,AAAMQ;AAC7B,AAAO,AAACkB,AAASN,AAAO,AAAI,AAAChB,AAAK,AAACuB,AAAOnB,AAChB,AAACmB,AAAOnB,AACR,AAAA,AAACoB,AAAK,AAACD,AAAOnB;AACjCa;AACA,AAACf,AAAKE;AACNc;AACAC;;;;;;;;AACP,AAAOH;AAAOC;AAAW,AAACf,AAAKE;AAAUc;AAClC,AAACE,AAAK,AAACxB,AAAMQ,AAAUe;;;;;;;;;;;;AAEpC,AAAA,AAAMM,AAAiBrB;AAAvB,AACE,AAAA,AAAOc;AACAC,AAAkBf;;AADzB,AAEE,AAAI,AAACV,AAAOyB;AACVD;;AACA,AAAI,AAAMQ,AAAG,AAACH,AAAOJ;AAAjB,AACE,AAAI,AAACnB,AAAK0B,AAAI,AAASA;;AAC3B,AAAMC,AAAE,AAAA,AAAA,AAACZ,AAAmB,AAACb,AAAK,AAACN,AAAMuB,AACjBA,AACAD;AAFxB,AAIE,AAAO,AAAA,AAAeS;AAAG,AAAA,AAAoBA;;;;;AAC/C,AAAO,AAACP,AAAK,AAACxB,AAAMuB,AAAmBD;AAAc,AAAChB,AAAKiB;;;;;;;;;AAEnE","names",["posh.lib.datom-matcher/datom-match-pattern?","pattern","datom","cljs.core/empty?","p","cljs.core/first","or__4131__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","and__4120__auto__","cljs.core/set?","G__36620","cljs.core/rest","posh.lib.datom-matcher/datom-match?","patterns","p1__36622#","cljs.core/some","posh.lib.datom-matcher/any-datoms-match?","datoms","G__36626","p1__36625#","posh.lib.datom-matcher/matching-datoms","G__36628","p1__36627#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","posh.lib.datom-matcher/combine-entids","entids","rest-datom","new-patterns","leftover-patterns","cljs.core/cons","cljs.core/vec","clojure.set.union.cljs$core$IFn$_invoke$arity$2","cljs.core/ffirst","cljs.core/set","posh.lib.datom-matcher/reduce-patterns","id","r"]]],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1562948133000],["^11","goog/math/math.js"],[1562948135000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^P","~$goog.array","~$goog.asserts"]]],["^11","goog/array/array.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1D"]]],["^11","goog/debug/error.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/dom/nodetype.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/object/object.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],"~:SHADOW-TIMESTAMP",[1562948138000,1562948133000],["^11","goog/math/long.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1D","~$goog.reflect"]]],["^11","goog/string/internal.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/functions/functions.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/structs/map.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^11","posh/lib/datom_matcher.cljc"],[1562948137000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^O","^M"]]],["^11","goog/asserts/asserts.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^11","goog/uri/uri.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1C","^1D","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/base.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",[]]],["^11","goog/structs/structs.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1C","~$goog.object"]]],["^11","goog/string/string.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","~$goog.string.internal"]]],["^11","goog/reflect/reflect.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/string/stringbuffer.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","goog/iter/iter.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1C","^1D","~$goog.functions","~$goog.math"]]],["^11","cljs/core.cljs"],[1562948133000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["~$goog.math.Long","~$goog.math.Integer","^1K","^1Q","^1C","~$goog.Uri","~$goog.string.StringBuffer"]]],["^11","goog/math/integer.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P"]]],["^11","clojure/set.cljs"],[1562948133000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^O"]]],["^11","goog/uri/utils.js"],[1562948135000,"^1?",["^ ","^1@",null,"^1A",["^F",[]],"^1B",["^P","^1C","^1D","^1K"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","^P","^P"],"^Q",["^F",["^R"]],"^S",null,"~:defs",["^ ","~$datom-match-pattern?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",4,"^8",7,"^9",4,"^:",27,"~:arglists",["^V",["~$quote",["^V",[["~$pattern","~$datom"]]]]]],"^G","~$posh.lib.datom-matcher/datom-match-pattern?","^6","posh/lib/datom_matcher.cljc","^:",27,"~:method-params",["^V",[["^23","^24"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",4,"~:ret-tag",["^F",["~$boolean","~$clj-nil"]],"^9",4,"~:max-fixed-arity",2,"~:fn-var",true,"^21",["^V",["^22",["^V",[["^23","^24"]]]]]],"~$datom-match?",["^ ","^20",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",14,"^8",7,"^9",14,"^:",19,"^21",["^V",["^22",["^V",[["~$patterns","^24"]]]]]],"^G","~$posh.lib.datom-matcher/datom-match?","^6","posh/lib/datom_matcher.cljc","^:",19,"^26",["^V",[["^2@","^24"]]],"^27",null,"^28",["^V",[null,null]],"^8",1,"^29",false,"^7",14,"^2:",["^F",["~$any","^2<"]],"^9",14,"^2=",2,"^2>",true,"^21",["^V",["^22",["^V",[["^2@","^24"]]]]]],"~$any-datoms-match?",["^ ","^20",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",17,"^8",7,"^9",17,"^:",24,"^21",["^V",["^22",["^V",[["^2@","~$datoms"]]]]]],"^G","~$posh.lib.datom-matcher/any-datoms-match?","^6","posh/lib/datom_matcher.cljc","^:",24,"^26",["^V",[["^2@","^2D"]]],"^27",null,"^28",["^V",[null,null]],"^8",1,"^29",false,"^7",17,"^2:",["^F",["^2;","^2B","^2<"]],"^9",17,"^2=",2,"^2>",true,"^21",["^V",["^22",["^V",[["^2@","^2D"]]]]]],"~$matching-datoms",["^ ","^20",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",24,"^8",7,"^9",24,"^:",22,"^21",["^V",["^22",["^V",[["^2@","^2D"]]]]]],"^G","~$posh.lib.datom-matcher/matching-datoms","^6","posh/lib/datom_matcher.cljc","^:",22,"^26",["^V",[["^2@","^2D"]]],"^27",null,"^28",["^V",[null,null]],"^8",1,"^29",false,"^7",24,"^2:",["^F",[null,"~$cljs.core/LazySeq","^2<"]],"^9",24,"^2=",2,"^2>",true,"^21",["^V",["^22",["^V",[["^2@","^2D"]]]]]],"~$combine-entids",["^ ","^20",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",31,"^8",7,"^9",31,"^:",21,"^21",["^V",["^22",["^V",[["~$entids","~$rest-datom","^2@","~$new-patterns","~$leftover-patterns"]]]]]],"^G","~$posh.lib.datom-matcher/combine-entids","^6","posh/lib/datom_matcher.cljc","^:",21,"^26",["^V",[["^2J","^2K","^2@","^2L","^2M"]]],"^27",null,"^28",["^V",[null,null]],"^8",1,"^29",false,"^7",31,"^2:","~$cljs.core/IMap","^9",31,"^2=",5,"^2>",true,"^21",["^V",["^22",["^V",[["^2J","^2K","^2@","^2L","^2M"]]]]]],"~$reduce-patterns",["^ ","^20",null,"^5",["^ ","^6","posh/lib/datom_matcher.cljc","^7",46,"^8",7,"^9",46,"^:",22,"^21",["^V",["^22",["^V",[["^2@"]]]]]],"^G","~$posh.lib.datom-matcher/reduce-patterns","^6","posh/lib/datom_matcher.cljc","^:",22,"^26",["^V",[["^2@"]]],"^27",null,"^28",["^V",[null,null]],"^8",1,"^29",false,"^7",46,"^2:","^2B","^9",46,"^2=",1,"^2>",true,"^21",["^V",["^22",["^V",[["^2@"]]]]]]],"^T",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^F",["~:leftover-patterns","~:new-patterns","~:else","~$_"]],"~:order",["~$_","^2U","^2T","^2S"]],"^Y",["^ ","^R",["^F",[]]],"^Z",["^ "],"^[",["^P","^O","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1=",[["^2Y","~:static-fns"],true,["^2Y","~:elide-asserts"],false,["^2Y","~:optimize-constants"],null,["^2Y","^14"],null,["^2Y","~:external-config"],null,["^2Y","~:tooling-config"],null,["^2Y","~:emit-constants"],null,["^2Y","~:load-tests"],null,["^2Y","~:infer-externs"],true,["^2Y","^16"],null,["~:js-options","~:js-provider"],"^R",["~:mode"],"~:dev",["^2Y","~:fn-invoke-direct"],null,["^2Y","~:source-map"],"/dev/null"]]]